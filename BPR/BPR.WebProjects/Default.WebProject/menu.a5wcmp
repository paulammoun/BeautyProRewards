{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha-Dark-Green",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "LocalCss": "<style type=\"text/css\">\n\n</style>",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "cssIcons": "font-awesome",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "onDialogInitialize": "function onDialogInitialize as v (e as p)\n\t\n'Request - The Request object. Includes Request.Variables, which should be used instead of the older e.rv construct\n'Session - The Session object. Should be used instead of the older e.session construct\n'Inside e:\n'e.tmpl = Component definition\n'e.rtc = Runtime calculations - you can use this to store data to be passed to other server side events (Note: the 'rtc' object cannot be used to persist state information - i.e. you can't set a value in rtc and then read that value in a subsequent callback. To persist state info see e._state).\n'e.arguments = SQL::Arguments object with values for each of the arguments defined in this component.  To read a value from arguments: e.arguments.find(\"argumentName\").data\n'TIP: You can also set the value of an argument. For example: e.arguments.set(\"country\",\"portugal\")\n'TIP: If you need to write code that performs actions on a SQL database you can use the 'Xbasic SQL Actions Code Generator' by right clicking and selecting the 'Genies...' menu option\n\n'-------------------Calling Python code ----------------------------------------------------------------------------------------\n'If you prefer to write server-side code using Python, here is how you can call a Python function:\n'\tdim returnValue as c =  helper::Python::Call(\"Python module name - without .py extension\",\"Python function\",e,session,request)\n'To force a reload of your Python module after you have edited your Python code:\n'\thelper::Python::ReloadModule(\"Python module name - without .py extension\")\n\n'Python functions must be defined in a Python module (file with a .py extension) that is stored in the Python folder in your Web Project\n'For more information on calling Python function, see \"https://documentation.alphasoftware.com/documentation/index?search=python%20guide\"\n'---------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n'You can set the initial value of any field by setting the property (see comment at end for Javascript technique to use when setting values for a large number of controls)\n'e.control.<fieldname>\n'For example:\n'e.control.firstname = \"Fred\"\n'e.control.lastname = \"Jones\"\n\n'For multi-valued controls (such as checkbox, List control configured as multi-select, etc.) you can set the value to a cr-lf list of values or use the special array() syntax.\n'Either of the following two methods will work\n'e.control.colors = \"array(red,green)\"\n'e.control.colors = comma_to_crlf(\"red,green\")\n\n'To set the value of a field in a repeating section, you must use \"_A5INSTANCE\" and the instance number as a suffix on the fieldname.\n'For example:\n'e.control.firstname_A5INSTANCE2 = \"Bob\"  'sets the value in the 2nd row of the repeating section.\n\n'To specify any javascript that you want to execute set the  e.javascript property. For example:\n'e.javascript = \"alert('hello');\"\n\n'You can set 'state' variables in this event. The value of any state variables will be available in all subsequent ajax callbacks.\n'To set a state variable:\n'e._state.myvar1 = \"value1\"\n'e._state.myvar2 = \"value2\"\n\n\n'Using Javascript to Set Control Values and the Row Count in a Repeating Section -- Recommended For Maximum Efficiency (Advanced users)\n'---------------------------------------------------------------------------------------------------------------------------\n'When setting the value of a large number of controls, you will improve performance if you generate the Javascript directly,\n'rather than setting properties in the e.control object (as described above) and then having Alpha Five generate the Javascript from this object.\n'The following example shows Javascript code that sets the number of rows in a Repeating Section and sets the value of various control\n'in the top section and Repeating Section of the Dialog:\n\n'Generate the Javascript to emit\n'dim js as c\n'js = <<%txt%\n'var rows = 7;\n'var setFocusToFirst = true;\n'var nullOutExistingData = true;\n'var repeatingSectionId = 'CONTAINER_1';\n'{dialog.object}._setRepeatingSectionRowCount(repeatingSectionId,rows,setFocusToFirst,nullOutExistingData);\n'var _d = {};\n\n'//Next command is optional. It is ONLY needed if the ._setRepeatingSectionRowCount() method has been called.\n'//The command copies default values into the _d object. Without this command, default values defined in the component will not be set.\n'//$u.o.assign(_d,DLG1_DlgObj.originalValues[0]);\n\n'_d['B'] = 'alpha'; //set the value of a control called 'B'\n'_d['E:2'] = 'beta'; //set the value of a control called 'E' in the 2nd Repeating Section row\n'_d['G:6'] = ['Red','Green']; //set the value of a checkbox called 'G' in the 6th Repeating Section row to 'Red' and 'Green'\n'{dialog.object}.prepare();\n'{dialog.object}.populate(_d);\n'{dialog.object}.refreshClientSideComputations();\n\n'%txt%\n\n'Now, emit the Javascript...\n'e.javascript = js\n\n'NOTE: In the above example, if the ._setRepeating() method is called in the 'onDialogInitialize' event, you are responsible for setting\n'values in ALL of the controls in the component. For example, if you have defined default values for some controls, and then set the values\n'of other controls using the .populate() method, only the values set in the _d object will be set. (The default values will NOT be set).\n'You can, however, put the default values into the _d object using this code:\n'$u.o.assign(_d,{dialog.object}.originalValues[0]);\n\n\n\n\n'Tip: You can use the xbasic varToJSON() function to help generate the Javascript object passed to the .populate() method.\n'For example:\n'dim j as p\n'j.firstname = \"John\"\n'j.lastname = \"Smith\"\n'j.quantity_a5instance1 = \"2\"\n'dim j.colorchoices_a5instance2[3] as c\n'j.colorchoices_a5instance2[1] = \"Red\"\n'j.colorchoices_a5instance2[2] = \"Blue\"\n'dim jsTxt as c\n'jsTxt = varToJSON(j)\n'js = \"{dialog.object}.populate(\" + jsTxt + \"); {dialog.object}.prepare();\"\n\n\n'TIP: To simulate session variables when running in Working Preview you can use this code:\n'if a5_isWorkingPreview() then\n'\t'running in working preview\n'\tsession.var1 = \"simulated value for var1\"\n'end if\n\nend function\n",
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "beforePrepare": "",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onFirestoreLoaded": "",
            "onFirestoreAuthStateChanged": "",
            "onFirestoreLogin": "",
            "onFirestoreLogout": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "dd/MM/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "actionJavascriptDefined": true,
        "info": {
            "createdBy": "Paul",
            "dateCreated": "2024-10-18",
            "dateLastEdited": "2024-10-21",
            "revisionnumber": 9
        },
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": "",
            "cognitoSettingsJSON": "",
            "hasLoginWithCognito": false,
            "hasLoginWithFirebase": false,
            "FirebaseSettingsJSON": "",
            "allowuseridpassword": true,
            "autologintoTransform": false,
            "transformtokenduration": 60,
            "tfautologintokenid": "",
            "defaultsigninmethod": "Userid and password",
            "hasLoginWithfirestore": false
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "layout_directive_PanelLayoutBegin",
                "display": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}{Data=74713ebe-b987-40c5-b79c-830884b3963d}{I:'$$web.panel.layout'} [Panel Layout: PANELLAYOUT_1] (LTR)",
                "idInternal": "74713ebe-b987-40c5-b79c-830884b3963d",
                "lastIndex": 13,
                "crc": "4294949317",
                "v": {
                    "container": {
                        "id": "PANELLAYOUT_1",
                        "_isdirty": true
                    },
                    "panelInstance": {
                        "HeaderScrolling": {
                            "axis": "Both"
                        },
                        "FooterScrolling": {
                            "axis": "Both"
                        },
                        "sections": {
                            "name": "<UsePanelId>",
                            "renderMethod": "Auto-Create-Destroy"
                        },
                        "resize": {
                            "allow": false,
                            "min": "",
                            "max": ""
                        },
                        "grip": {
                            "show": true,
                            "location": "50%"
                        }
                    },
                    "panelLayout": {
                        "flow": "LTR",
                        "animation": {
                            "type": "slide",
                            "duration": 400
                        },
                        "javascript": {
                            "onBeforeDockPanelHide": "",
                            "onPanelView": "",
                            "onResize": "",
                            "_onsize": "if(typeof {dialog.object} != 'undefined') {\n\tif(typeof {dialog.object}._findActiveLayoutRule != 'undefined') { \n\t\t{dialog.object}._findActiveLayoutRule();\n\t\t//alert('system on size');\n\t}\n}\n"
                        },
                        "dock": {
                            "method": "Over",
                            "flowLock": {
                                "has": true,
                                "autohide": true
                            }
                        },
                        "resizeClassname": "",
                        "behavior": "Fixed",
                        "hasScroller": true,
                        "scrollerJSON": ""
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}",
                        "icon": "$$web.panel.layout",
                        "displayText": "[Panel Layout: PANELLAYOUT_1] (LTR)",
                        "parentPanelCardId": "",
                        "lastID": "625d0184-e0d6-40df-b8b4-cd1c7ab364cc",
                        "break": false,
                        "display": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}{Data=74713ebe-b987-40c5-b79c-830884b3963d}{I:'$$web.panel.layout'} [Panel Layout: PANELLAYOUT_1] (LTR)"
                    },
                    "listview": {
                        "allchildren": ""
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_ContainerBegin",
                "display": "{C=Orange,White}{B=White,Orange}{F=+B}{I:'vertline'}{Data=77b79975-c839-42c5-bcd9-f4021170bb68}{I:'$$web.panel.header'} [PanelHeader:PANELHEADER_1]",
                "displayODFlat": "{Data=77b79975-c839-42c5-bcd9-f4021170bb68}{I:'$$format.border.style.dash'} [Container: PANELHEADER_1]",
                "idInternal": "77b79975-c839-42c5-bcd9-f4021170bb68",
                "lastIndex": 4,
                "parentContainer": 1,
                "displayOD": "{Data=77b79975-c839-42c5-bcd9-f4021170bb68}{I:'$$format.border.style.dash'} [Container: PANELHEADER_1]",
                "displayODtree": "{Data=77b79975-c839-42c5-bcd9-f4021170bb68}{I:'$$format.border.style.dash'} [Container: PANELHEADER_1]",
                "crc": "4294952173",
                "v": {
                    "container": {
                        "ID": "PANELHEADER_1",
                        "contentAlignment": "Left",
                        "buttonGroup": {
                            "orientation": "Horizontal"
                        },
                        "subType": "PanelHeader",
                        "contentVerticalAlign": "Top",
                        "CSSGridJSON": "",
                        "useFlex": true,
                        "useFlexLeft": false,
                        "alignItems": "",
                        "containersettype": "",
                        "edgeOffset": "",
                        "allowScrolling": false,
                        "scrolling": {
                            "axis": "Both",
                            "stopPropogation": false,
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "pull": {
                            "isDefined": false,
                            "javascript": {
                                "onPullRelease": "",
                                "onPullEnd": "",
                                "onPull": ""
                            },
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "_isdirty": true
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 1,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "{C=Orange,White}{B=White,Orange}{F=+B}",
                        "icon": "$$web.panel.header",
                        "displayText": "[PanelHeader:PANELHEADER_1]",
                        "parentPanelCardId": "",
                        "lastID": "e6164d09-ad3c-4ef1-86d8-472093925e48",
                        "break": false,
                        "display": "{C=Orange,White}{B=White,Orange}{F=+B}{I:'vertline'}{Data=77b79975-c839-42c5-bcd9-f4021170bb68}{I:'$$web.panel.header'} [PanelHeader:PANELHEADER_1]"
                    },
                    "_analyzecontainersjs": true
                },
                "precalc": {
                    "ControlHTML": "<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.PANELHEADER_1\"   \n\t\t\tA5-containerType=\"panelheader\"\n\t\t\tclass=\"A5CWLayout \"  style=\"\"  ><!--DIV for Container control-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=72293e1b-8379-4b0b-ae61-f6745db5d786}{I:'$$control.edit'} [textbox1]<<break>>",
                "idInternal": "72293e1b-8379-4b0b-ae61-f6745db5d786",
                "parentContainer": 2,
                "crc": "4294939811",
                "v": {
                    "controlType": "textbox",
                    "variableName": "textbox1",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_textbox1_72293e1b83794b0bae61f6745db5d786(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('TEXTBOX1');};"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "custom": {
                            "definitionJSON": ""
                        },
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Textbox1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "77b79975-c839-42c5-bcd9-f4021170bb68",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "color": "",
                        "icon": "$$control.edit",
                        "displayText": "[textbox1]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=72293e1b-8379-4b0b-ae61-f6745db5d786}{I:'$$control.edit'} [textbox1]<<break>>"
                    },
                    "specialtype": "None",
                    "specialtypeJSON": "",
                    "lookupDefinitionJSON": ""
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--FldS--><input\ttype=\"text\" id=\"{grid.componentname}.V.R{grid.rownumber}.TEXTBOX1\" title=\"\"     class=\"[theme:edit.base.className|class.dialogInput] \" style=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  onchange=\"var tfunc = function() {onChange_textbox1_72293e1b83794b0bae61f6745db5d786.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"   name=\"V.R{grid.rownumber}.TEXTBOX1\"    value=\"\"    />\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'TEXTBOX1': {info: {controlType: 'textbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n"
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_ContainerEnd",
                "display": "{C=Orange,White}{B=White,Orange}{F=+B}{I:'vertline'}{Data=e6164d09-ad3c-4ef1-86d8-472093925e48}{I:'vertLineCap'} [PanelHeader End: PANELHEADER_1]",
                "displayODFlat": "{Data=e6164d09-ad3c-4ef1-86d8-472093925e48}{I:'$$format.border.style.dash'} [Container End]",
                "idInternal": "e6164d09-ad3c-4ef1-86d8-472093925e48",
                "parentContainer": 1,
                "displayOD": "{Data=e6164d09-ad3c-4ef1-86d8-472093925e48}{I:'$$format.border.style.dash'} [Container End]",
                "displayODtree": "{Data=e6164d09-ad3c-4ef1-86d8-472093925e48}{I:'$$format.border.style.dash'} [Container End]",
                "crc": "4294913329",
                "v": {
                    "container": {
                        "BreakType": "None",
                        "BreakHeight": ".1in",
                        "breakHorizontalSpace": ".1in"
                    },
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 4,
                        "containerStartID": "77b79975-c839-42c5-bcd9-f4021170bb68",
                        "color": "{C=Orange,White}{B=White,Orange}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[PanelHeader End: PANELHEADER_1]",
                        "parentPanelCardId": "",
                        "break": false,
                        "display": "{C=Orange,White}{B=White,Orange}{F=+B}{I:'vertline'}{Data=e6164d09-ad3c-4ef1-86d8-472093925e48}{I:'vertLineCap'} [PanelHeader End: PANELHEADER_1]"
                    }
                },
                "precalc": {
                    "ControlHTML": "<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t\t</div>\n\t",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 2,
                "__flagwrapcontentsindiv": false
            },
            {
                "controlType": "layout_directive_PanelCardBegin",
                "display": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{Data=ae5a8bae-191e-403a-a084-c67a19de9f47}{I:'$$web.panel.card'} [Panel Card: PANELCARD_2]",
                "idInternal": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                "lastIndex": 7,
                "parentContainer": 1,
                "crc": "4294916853",
                "v": {
                    "container": {
                        "id": "PANELCARD_2",
                        "_isdirty": true
                    },
                    "panelInstance": {
                        "layout": {
                            "size": "15%"
                        },
                        "sections": {
                            "name": "<UsePanelId>",
                            "renderMethod": "Auto-Create-Destroy"
                        },
                        "resize": {
                            "allow": false,
                            "min": "",
                            "max": ""
                        },
                        "grip": {
                            "show": true,
                            "location": "50%"
                        }
                    },
                    "panelCard": {
                        "javascript": {
                            "onActivate": "",
                            "onView": ""
                        },
                        "allowBodyScrolling": true,
                        "bodyScrolling": {
                            "axis": "Both"
                        },
                        "pull": {
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "scrolling": {
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "type": "Default",
                        "_panelCardDirty": false,
                        "_orphanControlHTML": "*gzip:H4sIAAAAAAAAC+PlAgCshaIUAgAAAA==",
                        "pinchToZoom": false,
                        "centerContents": false,
                        "_precalcJS": "*gzip:H4sIAAAAAAAAC6VUbU/bMBDe10ziP5hII61EQ5nGl5QiVaXsRayglrF9QEJO7DTeXDtynJau6n/f2YnLGqaNCamqnOfunnvufGdBl2hwEl5jQfkQK9Ja7732dEbnNELBmjDM5Sws9IrTTXAIpliSVYSMk5dIoanQ9ZenV7mJyfScW0/PK1QCwClhC5RwXBR9f3Ay/HqJV7LUPrKkfX/JiM4i9I4JH53dqTtxp0/3O50LTqadzpk5fpoOIZOSfKqx0gZkIi81Mgn7fsYIoRDLSN9fzxQjYSLnuRSgTOA53YS34aTClVyKch5TtQlH364H4/OP4/efR+Mvxz4ynn3/OZ5Hu5JGgoAgI9uW6Qow5xcICodX45vJ1aWPXOMaRGNDdN/UVndULqhKuVxGCJda9lDd4eNu900P+WenR6Cukvx4qjo+crVYgwFjRfGPmM6YMH2PFXJJEk6ximKpM+Csu2Kd6W5HthcPirAemignITBDsrGjUiTQS+4mCT+wAgbHkLtJ0jK/VjKXM6yZFBFKMS9oZcvLx0gPZjMwVddx3kPjm5SqZoB2dC1WKfCYICzBWqotV5GZHmpV1om8bGt6avO4TGrmAMS6fJ5M04LCjgTd/GELcpo2IcVmmcMqqNblLZ6Z1TL8PS8IayDQYy3nu3mrrtjLgT8rI6OYUNcZs+Fur+tpIKzIOV5FAqaz59thGJx8sJt5wSgnhZme7aVbylRK7SgtYMbWcPyGiCn7CW9KWorEFNlqozVLW2bvZYrc4yTj7zTRG7TfR0EpCE2ZoCRABwdPPJ5C4X1O0ltGl1RNaAHJbuQF09vHsP2f/q0AFnJ0ORxMzu/fBoc6Y0W7t/f6JZrBQ8CAG9OfOUCSS19JapBCDf8M2dXd7qFNr74AU+vuBUA9tW0A2ALrxgXVxiG8BU0TRMKv/eoXxX8f0nQGAAA="
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "info": {
                        "level": 1,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 5,
                        "color": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}",
                        "icon": "$$web.panel.card",
                        "displayText": "[Panel Card: PANELCARD_2]",
                        "parentPanelCardId": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                        "lastID": "138be0db-b69e-4e2e-9d92-82c4cfa4ff3c",
                        "break": false,
                        "display": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{Data=ae5a8bae-191e-403a-a084-c67a19de9f47}{I:'$$web.panel.card'} [Panel Card: PANELCARD_2]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\n\nv._dirty = .f.\n\n\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=284c2992-aec5-4d98-9498-45e487ff4683}{I:'$$window.menu'} [ExpandingMenu1]<<break>>",
                "idInternal": "284c2992-aec5-4d98-9498-45e487ff4683",
                "parentContainer": 5,
                "crc": "4294931707",
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "ExpandingMenu1",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "custom": {
                            "definitionJSON": ""
                        },
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Expanding Menu1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "customControl": {
                        "height": "",
                        "width": "4in",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\tmethodForDefiningMenuData: 'UseGenie',\n\tmenuDataGenieJSON: '{\\r\\n\\t\"tree\": [\\r\\n\\t{\\r\\n\\t\\t\"label\": \"Adresses\",\\r\\n\\t\\t\"level\": 1,\\r\\n\\t\\t\"isLeaf\": true,\\r\\n\\t\\t\"Icon\": \"\",\\r\\n\\t\\t\"Event\": \"\",\\r\\n\\t\\t\"value\": \"\",\\r\\n\\t\\t\"onClick\": \"{dialog.object}.runAction(\\'OpenAddresses\\');\",\\r\\n\\t\\t\"SecurityGroups\": \"\",\\r\\n\\t\\t\"serverSideShowHideExpn\": \"\",\\r\\n\\t\\t\"targetPanel\": \"\",\\r\\n\\t\\t\"itemType\": \"Item\",\\r\\n\\t\\t\"headingText\": \"\",\\r\\n\\t\\t\"actionName\": \"\",\\r\\n\\t\\t\"clientsideshowhideexpn\": \"\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"label\": \"Salon/Hairdressers\",\\r\\n\\t\\t\"level\": 1,\\r\\n\\t\\t\"isLeaf\": true,\\r\\n\\t\\t\"Icon\": \"\",\\r\\n\\t\\t\"Event\": \"\",\\r\\n\\t\\t\"value\": \"\",\\r\\n\\t\\t\"onClick\": \"{dialog.object}.runAction(\\'OpenSalon\\');\",\\r\\n\\t\\t\"SecurityGroups\": \"\",\\r\\n\\t\\t\"serverSideShowHideExpn\": \"\",\\r\\n\\t\\t\"targetPanel\": \"\",\\r\\n\\t\\t\"itemType\": \"Item\",\\r\\n\\t\\t\"headingText\": \"\",\\r\\n\\t\\t\"actionName\": \"\",\\r\\n\\t\\t\"clientsideshowhideexpn\": \"\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"label\": \"Gifts\",\\r\\n\\t\\t\"level\": 1,\\r\\n\\t\\t\"isLeaf\": true,\\r\\n\\t\\t\"Icon\": \"\",\\r\\n\\t\\t\"Event\": \"\",\\r\\n\\t\\t\"value\": \"\",\\r\\n\\t\\t\"onClick\": \"{dialog.object}.runAction(\\'OpneGifts\\');\",\\r\\n\\t\\t\"SecurityGroups\": \"\",\\r\\n\\t\\t\"serverSideShowHideExpn\": \"\",\\r\\n\\t\\t\"targetPanel\": \"\",\\r\\n\\t\\t\"itemType\": \"Item\",\\r\\n\\t\\t\"headingText\": \"\",\\r\\n\\t\\t\"actionName\": \"\",\\r\\n\\t\\t\"clientsideshowhideexpn\": \"\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"label\": \"Distribute Points\",\\r\\n\\t\\t\"level\": 1,\\r\\n\\t\\t\"isLeaf\": true,\\r\\n\\t\\t\"Icon\": \"\",\\r\\n\\t\\t\"Event\": \"\",\\r\\n\\t\\t\"value\": \"\",\\r\\n\\t\\t\"onClick\": \"{dialog.object}.runAction(\\'OpenDistPoint\\');\",\\r\\n\\t\\t\"SecurityGroups\": \"\",\\r\\n\\t\\t\"serverSideShowHideExpn\": \"\",\\r\\n\\t\\t\"targetPanel\": \"\",\\r\\n\\t\\t\"itemType\": \"Item\",\\r\\n\\t\\t\"headingText\": \"\",\\r\\n\\t\\t\"actionName\": \"\",\\r\\n\\t\\t\"clientsideshowhideexpn\": \"\"\\r\\n\\t}]\\r\\n}',\n\tmenuDataJSON: '',\n\tmenuDataUserSpecifiedJSON: '',\n\tmenuDataXbasic: '',\n\tmenuMasterColor: '#2c2a2a',\n\tbelowMenuBackgrouncolor: '<Same as Menu Color>',\n\ttextColorType: 'Auto',\n\ttextColor: '',\n\tlevelIndent: '24px',\n\tsettings: {\n\t\titem: {\n\t\t\tclassName: 'item',\n\t\t\topened: {\n\t\t\t\tclassName: 'branchItemOpened',\n\t\t\t\ticon: 'svgIcon=#alpha-icon-chevronUp:icon'\n\t\t\t},\n\t\t\tclosed: {\n\t\t\t\tclassName: 'branchItemClosed',\n\t\t\t\ticon: 'svgIcon=#alpha-icon-chevronRight:icon'\n\t\t\t},\n\t\t\tselectedMenuItemClassName: '',\n\t\t\tselectedMenuItemStyle: ''\n\t\t},\n\t\tbranch: {\n\t\t\tclassName: 'branch'\n\t\t}\n\t},\n\tdelegateScrollingToParentContainer: false,\n\taboveMenuHTML: '',\n\tbelowMenuHTML: '',\n\tdirection: 'ltr',\n\tbehavior: {\n\t\ttoggleOnHover: true,\n\t\tonHoverDelay: 600\n\t},\n\tcssType: 'BuiltIn',\n\tcustomCSS: '',\n\tsubtype: 'ExpandingMenu',\n\tsettingsJSON: '{\\r\\n\\tinputId: \\'{variablename}\\',\\r\\n\\tvariableName: \\'{variablenameUPPERCASE}\\',\\r\\n\\ttheme: \\'{dialog.style}\\',\\r\\n\\tmultiple: false,\\r\\n\\tseparator: \\'\\\\\\\\n\\',\\r\\n\\tloopNavigate: false,\\r\\n\\tloopNavigateNullSelection: true,\\r\\n\\tallowNullSelection: false,\\r\\n\\tautoRefresh: false,\\r\\n\\tallowNullDeselection: false,\\r\\n\\tallowAnyValue: true,\\r\\n\\tcaptureFocus: false,\\r\\n\\tscroll: {\\r\\n\\t\\taxis: \\'y\\',\\r\\n\\t\\tstopPropogation: false,\\r\\n\\t\\tpull: {\\r\\n\\t\\t\\ty: \\'auto\\'\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tlayout: \\'default\\',\\r\\n\\tlayouts: {\\r\\n\\t\\tdefault: {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: \\'\\\\r\\\\n{[scope].getTree([root].items,0)}\\\\r\\\\n{*root}\\\\r\\\\n{/*root}\\\\r\\\\n\\\\r\\\\n\\'\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tgetTree: function(data,depth,opened) {\\r\\n\\tif(depth == 0){\\r\\n\\t\\tthis._branches = {};\\r\\n\\t\\tthis._branchPaths = [];\\r\\n\\t\\tvar html  = [\\'<div>\\'];\\r\\n\\t} else{\\r\\n\\t\\tvar dis = \\'none\\';\\r\\n\\t\\tif(opened) dis = \\'\\';\\r\\n\\t\\tvar html  = [\\'<div class=\"\\'+this.data.settings.branch.className+\\'\" style=\"display: \\'+dis+\\'; overflow: hidden;\">\\'];\\r\\n\\t}\\r\\n\\tvar iconOpened = this.data.settings.item.opened.icon;\\r\\n\\tvar iconClosed = this.data.settings.item.closed.icon;\\r\\n\\tif(iconOpened) iconOpened = A5.u.icon.html(iconOpened,\\'style=\"float: right\"\\');\\r\\n\\telse iconOpened = \\'\\';\\r\\n\\tif(iconClosed) iconClosed = A5.u.icon.html(iconClosed,\\'style=\"float: right\"\\');\\r\\n\\telse iconClosed = \\'\\';\\r\\n\\tdepth++;\\r\\n\\tvar cn = \\'\\';\\r\\n\\tvar icon = \\'\\';\\r\\n\\tvar itemIcon = \\'\\';\\r\\n\\tvar flagShow;\\r\\n\\tvar id = this.contId + \\'.\\';\\r\\n\\tvar mEvents = \\'\\';\\r\\n\\t\\t\\tmEvents = \\'onmouseover=\"{dialog.object}.getControl(\\\\\\'\\'+this.variableName + \\'\\\\\\').hoverExpand(this.id);\" onmouseout=\"{dialog.object}.getControl(\\\\\\'\\'+this.variableName + \\'\\\\\\').hoverExpandCancel(this.id);\"\\';\\r\\n\\t;\\r\\n\\tif(this._branchPaths.length > 0 ) {\\r\\n\\t\\tid = id + this._branchPaths.join(\\'.\\') + \\'.\\'\\r\\n\\t}\\r\\n\\tfor(var i = 0; i < data.length; i++) {\\r\\n\\r\\n\\t\\tflagShow = true;\\r\\n\\t\\t\\tif(typeof data[i].showHide != \\'undefined\\') {\\r\\n\\t\\t\\t\\tif(typeof data[i].showHide == \\'function\\') {\\r\\n\\t\\t\\t\\t\\tflagShow = data[i].showHide.call();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t\\tif(flagShow) {\\r\\n\\t\\t\\titemIcon = \\'\\';\\r\\n\\t\\t\\tif(data[i].icon) {\\r\\n\\t\\t\\t\\titemIcon = A5.u.icon.html(data[i].icon) + \\' \\';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(typeof data[i].children != \\'undefined\\') {\\r\\n\\t\\t\\t\\tcn = this.data.settings.item.className+\\' \\'+this.data.settings.item.closed.className;\\r\\n\\t\\t\\t\\ticon = iconClosed;\\r\\n\\t\\t\\t\\tif(data[i].opened) {\\r\\n\\t\\t\\t\\t\\tcn = this.data.settings.item.className+\\' \\'+this.data.settings.item.opened.className;\\r\\n\\t\\t\\t\\t\\ticon = iconOpened;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif(typeof data[i].action == \\'string\\'){\\r\\n\\t\\t\\t\\t\\thtml.push(\\'<div><div id=\"\\'+id+\\'\\'+i+\\'\" class=\"\\'+cn+\\'\" \\'+mEvents+\\' a5-item=\"toggle:\\'+data[i].action+\\'\" a5-value=\"\\'+data[i].value+\\'\"  >\\' +itemIcon+  data[i].html+icon+\\'</div>\\');\\r\\n\\t\\t\\t\\t} else{\\r\\n\\t\\t\\t\\t\\thtml.push(\\'<div><div id=\"\\'+id+\\'\\'+i+\\'\" class=\"\\'+cn+\\'\" \\'+mEvents+\\' a5-item=\"toggle\" a5-value=\"\\'+data[i].value+\\'\"  >\\' +itemIcon + data[i].html+icon+\\'</div>\\');\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis._branches[data[i].value] = [].concat(this._branchPaths);\\r\\n\\t\\t\\t\\tthis._branchPaths.push(i);\\r\\n\\t\\t\\t\\thtml.push(this.getTree(data[i].children,depth, data[i].opened));\\r\\n\\t\\t\\t\\tthis._branchPaths.pop();\\r\\n\\t\\t\\t} else if(typeof data[i].action == \\'string\\'){\\r\\n\\t\\t\\t\\thtml.push(\\'<div id=\"\\'+id+\\'\\'+i+\\'\" class=\"\\'+this.data.settings.item.className+\\'\" a5-item=\"action:\\'+data[i].action+\\'\" a5-value=\"\\'+data[i].value+\\'\"  >\\' +itemIcon + data[i].html);\\r\\n\\t\\t\\t} else{\\r\\n\\t\\t\\t\\thtml.push(\\'<div id=\"\\'+id+\\'\\'+i+\\'\" class=\"\\'+this.data.settings.item.className+\\'\">\\'+itemIcon + data[i].html);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\thtml.push(\\'</div>\\');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thtml.push(\\'</div>\\');\\r\\n\\thtml = html.join(\\'\\');\\r\\n\\treturn html;\\r\\n},\\r\\n\\t_onInitialize: function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName+ \\' menuFullScreenBackgroundColor\\');},\\r\\n\\tcollapseMenu: function(value) {\\r\\n\\r\\n\\tvar ele = false;\\r\\n\\tele = this.getElement(value);\\r\\n\\tif(ele) {\\r\\n\\t\\tele = ele[0]\\r\\n\\t\\tnEle = ele.nextSibling;\\r\\n\\t\\tif(nEle.style.display != \\'none\\') {\\r\\n\\t\\t\\tthis.items.toggle.onClick.call(this,\\'\\',\\'\\',{},ele)\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n,\\r\\n\\thoverExpand: function(id) { \\r\\n\\tif(this._heId == id) {return false; }\\r\\n\\tclearTimeout(this._heTo); //hover expand timeout\\r\\n\\tthis._heId = id;\\r\\n\\tvar ci = this;\\r\\n\\tthis._heTo = setTimeout(function(){\\r\\n\\t\\tvar ele = $(ci._heId);\\r\\n\\t\\tif(ele) ci.items.toggle.onClick.call(ci,\\'\\',\\'\\',{},ele);\\r\\n\\t\\tci._heId = false;\\r\\n\\t\\tdelete ci;\\r\\n\\t},600); //hover duration before toggle\\r\\n}\\r\\n,\\r\\n\\thoverExpandCancel: function(id) { \\r\\n\\tif(this._heId == id) {\\r\\n\\t\\tclearTimeout(this._heTo); //hover expand timeout\\r\\n\\t\\tthis._heId = false;\\r\\n\\t}\\r\\n}\\r\\n,\\r\\n\\tcollapseSiblings: function(value) { \\r\\n\\tif(typeof this._branches[value] != \\'undefined\\') {\\r\\n\\t\\tvar b = this._branches[value];\\r\\n\\t\\tvar d = this.data.items;\\r\\n\\t\\tfor(var i = 0; i < b.length; i++) {\\r\\n\\t\\t\\td = d[i].children;\\r\\n\\t\\t}\\r\\n\\t\\tvar id = this.contId + \\'.\\';\\r\\n\\t\\tif(b.length > 0) {\\r\\n\\t\\t\\tid = id + b.join(\\'.\\') + \\'.\\';\\r\\n\\r\\n\\t\\t}\\r\\n\\t\\tvar ele  = \\'\\';\\r\\n\\t\\tvar nEle = \\'\\';\\r\\n\\t\\tfor(var i = 0; i < d.length; i++) {\\r\\n\\t\\t\\tif(d[i].value != value && d[i].children) {\\r\\n\\t\\t\\t\\tele = $(id + i);\\r\\n\\t\\t\\t\\tnEle = ele.nextSibling;\\r\\n\\r\\n\\t\\t\\t\\tif(nEle.style.display != \\'none\\') {\\r\\n\\t\\t\\t\\t\\tthis.items.toggle.onClick.call(this,\\'\\',\\'\\',{},ele)\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t}\\r\\n\\r\\n}\\r\\n,\\r\\n\\tcollapseAll: function() { \\r\\n\\tvar ele = false;\\r\\n\\tvar nEle = false;\\r\\n\\tvar attr = \\'\\';\\r\\n\\tfor(var i = 0; i < this._i.ids.length; i++) {\\r\\n\\t\\tele = $(this._i.ids[i]);\\r\\n\\t\\tif(ele) {\\r\\n\\t\\t\\tattr = ele.getAttribute(\\'a5-item\\');\\r\\n\\t\\t\\tif(attr.indexOf(\\'toggle\\') == 0) {\\r\\n\\t\\t\\t\\tnEle = ele.nextSibling;\\r\\n\\t\\t\\t\\tif(nEle.style.display != \\'none\\') this.items.toggle.onClick.call(this,\\'\\',\\'\\',{},ele)\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n,\\r\\n\\tonChange: function() {\\r\\n\\r\\n\\tvar ele = this.getElement(this.value[0]);\\r\\n\\tif(ele ) {\\r\\n\\t\\tif(ele[0]) {\\r\\n\\t\\t\\tvar pEle = ele[0].parentNode;\\r\\n\\t\\t\\tvar tEle = $(this.contId);\\r\\n\\t\\t\\tvar iEle = null;\\r\\n\\t\\t\\tvar item = \\'\\';\\r\\n\\t\\t\\tvar ptEle = null;\\r\\n\\t\\t\\twhile(pEle != tEle) {\\r\\n\\t\\t\\t\\tptEle = pEle.parentNode;\\r\\n\\t\\t\\t\\tif(pEle.style.display == \\'none\\') {\\r\\n\\t\\t\\t\\t\\tiEle = ptEle.children[0];\\r\\n\\t\\t\\t\\t\\titem = iEle.getAttribute(\\'a5-item\\');\\r\\n\\t\\t\\t\\t\\tif(typeof item == \\'string\\') {\\r\\n\\t\\t\\t\\t\\t\\tif(item.indexOf(\\'toggle\\') == 0) {\\r\\n\\t\\t\\t\\t\\t\\t\\titem = item.split(\\':\\');\\r\\n\\t\\t\\t\\t\\t\\t\\titem.shift();\\r\\n\\t\\t\\t\\t\\t\\t\\titem = item.join(\\':\\');\\r\\n\\t\\t\\t\\t\\t\\t\\tthis.items.toggle.onClick.call(this,false,item,null,iEle,null);\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tpEle = ptEle;\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\r\\n}\\r\\n,\\r\\n\\titems: {\\r\\n\\t\\t\\'toggle\\' : {\\r\\n\\t\\t\\titemName: \\'toggle\\',\\r\\n\\t\\t\\tselectable: true,\\r\\n\\t\\t\\tselectedClassName: \\'\\',\\r\\n\\t\\t\\tonClick: function(v,ia,i,ele) {\\r\\n\\t\\t\\t\\tthis.hoverExpandCancel(ele.id);\\r\\n\\t\\t\\t\\tia = ia.split(\\':\\');\\r\\n\\r\\n\\t\\t\\t\\taction = this.data.actions[ia.shift()];\\r\\n\\t\\t\\t\\tif(typeof action == \\'function\\' && v !== false){\\r\\n\\t\\t\\t\\t\\tia = ia.join(\\':\\');\\r\\n\\t\\t\\t\\t\\tvar r = action.call(this,ia,v,i,ele);\\r\\n\\t\\t\\t\\t\\tif(typeof r != \\'undefined\\' && !r) return false;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar nEle = ele.nextSibling;\\r\\n\\t\\t\\t\\tif(nEle.style.display == \\'none\\'){\\r\\n\\t\\t\\t\\t\\tnEle.style.display = \\'\\';\\r\\n\\t\\t\\t\\t\\tA5.u.element.transition(nEle,{\\r\\n\\t\\t\\t\\t\\t\\tfrom: {height: \\'0px\\'},\\r\\n\\t\\t\\t\\t\\t\\tto: {height: nEle.offsetHeight+\\'px\\'},\\r\\n\\t\\t\\t\\t\\t\\tduration: 600\\r\\n\\t\\t\\t\\t\\t}, function(){\\r\\n\\t\\t\\t\\t\\t\\tthis.style.height = \\'\\';\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\tele.className = this.data.settings.item.className+\\' \\'+this.data.settings.item.opened.className;\\r\\n\\t\\t\\t\\t\\tvar icon = this.data.settings.item.opened.icon;\\r\\n\\t\\t\\t\\t\\tif(icon) A5.u.icon.update(ele.lastChild,icon);\\r\\n\\t\\t\\t\\t} else{\\r\\n\\t\\t\\t\\t\\tA5.u.element.transition(nEle,{\\r\\n\\t\\t\\t\\t\\t\\tfrom: {height: nEle.offsetHeight+\\'px\\'},\\r\\n\\t\\t\\t\\t\\t\\tto: {height: \\'0px\\'},\\r\\n\\t\\t\\t\\t\\t\\tduration: 600\\r\\n\\t\\t\\t\\t\\t}, function(){\\r\\n\\t\\t\\t\\t\\t\\tthis.style.display = \\'none\\';\\r\\n\\t\\t\\t\\t\\t\\tthis.style.height = \\'\\';\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\tele.className = this.data.settings.item.className+\\' \\'+this.data.settings.item.closed.className;\\r\\n\\t\\t\\t\\t\\tvar icon = this.data.settings.item.closed.icon;\\r\\n\\t\\t\\t\\t\\tif(icon) A5.u.icon.update(ele.lastChild,icon);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t},\\r\\n\\t\\t\\'action\\' : {\\r\\n\\t\\t\\titemName: \\'action\\',\\r\\n\\t\\t\\tselectable: true,\\r\\n\\t\\t\\tselectedClassName: \\'\\',\\r\\n\\t\\t\\tonClick: function(v,ia,i,ele) {\\r\\n\\t\\t\\t\\tia = ia.split(\\':\\');\\r\\n\\t\\taction = this.data.actions[ia.shift()];\\r\\n\\t\\tif(typeof action == \\'function\\'){\\r\\n\\t\\t\\tia = ia.join(\\':\\');\\r\\n\\t\\t\\taction.call(this,ia,v,i,ele);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"items\": [\\r\\n\\t{\\r\\n\\t\\t\"html\": \"Adresses\",\\r\\n\\t\\t\"action\": \"action1\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"html\": \"Salon/Hairdressers\",\\r\\n\\t\\t\"action\": \"action2\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"html\": \"Gifts\",\\r\\n\\t\\t\"action\": \"action3\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\"html\": \"Distribute Points\",\\r\\n\\t\\t\"action\": \"action4\"\\r\\n\\t}],\\r\\n\\t\"actions\": {\\r\\n\\t\\t\"action1\": function(arg) { {dialog.object}.runAction(\\'OpenAddresses\\');},\\r\\n\\t\\t\"action2\": function(arg) { {dialog.object}.runAction(\\'OpenSalon\\');},\\r\\n\\t\\t\"action3\": function(arg) { {dialog.object}.runAction(\\'OpneGifts\\');},\\r\\n\\t\\t\"action4\": function(arg) { {dialog.object}.runAction(\\'OpenDistPoint\\');}\\r\\n\\t},\\r\\n\\t\"settings\": {\\r\\n\\t\\t\"item\": {\\r\\n\\t\\t\\t\"className\": \"item\",\\r\\n\\t\\t\\t\"opened\": {\\r\\n\\t\\t\\t\\t\"className\": \"branchItemOpened\",\\r\\n\\t\\t\\t\\t\"icon\": \"svgIcon=#alpha-icon-chevronUp:icon\"\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"closed\": {\\r\\n\\t\\t\\t\\t\"className\": \"branchItemClosed\",\\r\\n\\t\\t\\t\\t\"icon\": \"svgIcon=#alpha-icon-chevronRight:icon\"\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"selectedMenuItemClassName\": \"\",\\r\\n\\t\\t\\t\"selectedMenuItemStyle\": \"\"\\r\\n\\t\\t},\\r\\n\\t\\t\"branch\": {\\r\\n\\t\\t\\t\"className\": \"branch\"\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}',\n\tcss: '@function makeColorSafe($foreColor,$backColor) {\\r\\n    $f-h: hue($foreColor);\\r\\n    $f-s: saturation($foreColor);\\r\\n    $f-l: lightness($foreColor);\\r\\n    $b-h: hue($backColor);\\r\\n    $b-s: saturation($backColor);\\r\\n    $b-l: lightness($backColor);\\r\\n    $d-h: abs( $f-h - $b-h );\\r\\n    $d-s: abs( $f-s - $b-s );\\r\\n    $d-l: abs( $f-l - $b-l );\\r\\n    @if $d-h < 15deg {\\r\\n        @if $d-l < 60% {\\r\\n            $n-l: if( $b-l > 50%, $b-l - 60%, $b-l + 60% );\\r\\n            $n-s: if( $d-s > 20%, $f-s, if( $b-s > 75% , $f-s - 20%, $f-s + 20% ));\\r\\n            @return change-color( $foreColor , $lightness: $n-l , $saturation: $n-s )\\r\\n        }\\r\\n    } @else {\\r\\n        @if $d-l < 50% and $d-s < 50% {\\r\\n            $n-l: if( $b-l > 55%, $b-l - 50%, $b-l + 50% );\\r\\n            @return change-color( $foreColor , $lightness: $n-l )\\r\\n        }\\r\\n    }\\r\\n    @return $foreColor\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n$color: #2c2a2a; //this sets the color of the menu tree. the PanelCard that contains this ViewBox has its background color set to the same value\\r\\n$colorHover: lighten($color,5);\\r\\n$colorBranch: lighten($color,10);\\r\\n$colorBranchHover: lighten($color,15);\\r\\n$foreColor: makeColorSafe(#000,$color);\\r\\n$indent: 24px;\\r\\n\\r\\n.item .icon {\\r\\n    fill: $foreColor;\\r\\n    stroke: $foreColor;\\r\\n    \\r\\n}\\r\\n\\r\\n.item {\\r\\n\\tposition: relative;\\r\\n\\tpadding: 6px 12px;\\r\\n\\tbackground: $color;\\r\\n\\tcursor: pointer;\\r\\n\\tline-height: 26px;\\r\\n\\tcolor: $foreColor;\\r\\n\\t\\r\\n}\\r\\n\\r\\n.item:hover {\\r\\n\\tbackground: $colorHover;\\r\\n}\\r\\n.branch .item {\\r\\n\\tpadding-left: $indent;\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n.branch .item:hover {\\r\\n\\tbackground: $colorBranchHover;\\r\\n}\\r\\n.branch {\\r\\n\\tbackground: $colorBranch;\\r\\n}\\r\\n.branch .branch .item {\\r\\n\\tpadding-left: $indent*2;\\r\\n}\\r\\n.branch .branch .branch .item {\\r\\n\\tpadding-left: $indent*3;\\r\\n}\\r\\n.branch .branch .branch .branch .item {\\r\\n\\tpadding-left: $indent*4;\\r\\n}\\r\\n.branch .branch .branch .branch .branch .item {\\r\\n\\tpadding-left: $indent*5;\\r\\n}\\r\\n\\r\\n\\r\\n&.menuFullScreenBackgroundColor  {\\r\\n\\tbackground-color:#2c2a2a;\\r\\n}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now'\n}",
                        "subtype": "ExpandingMenu",
                        "class": "",
                        "style": ""
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 6,
                        "color": "",
                        "icon": "$$window.menu",
                        "displayText": "[ExpandingMenu1]",
                        "parentPanelCardId": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                        "break": true,
                        "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=284c2992-aec5-4d98-9498-45e487ff4683}{I:'$$window.menu'} [ExpandingMenu1]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['EXPANDINGMENU1'] = [[dialog.dataBoundCustomControlData.ExpandingMenu1]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['EXPANDINGMENU1'] = [[dialog.dataBoundCustomControlSettings.ExpandingMenu1]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['EXPANDINGMENU1'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['EXPANDINGMENU1'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['EXPANDINGMENU1'] }",
                        "_jsOnChangeFunction": "function onChange_ExpandingMenu1_284c2992aec54d98949845e487ff4683(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('EXPANDINGMENU1');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "listview": {
                        "delayRenderTillVisible": false
                    }
                },
                "precalc": {
                    "columnInfo": "'EXPANDINGMENU1': {info: {controlType: 'ExpandingMenu'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 4in\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.EXPANDINGMENU1\" name=\"V.R{grid.rownumber}.EXPANDINGMENU1\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.EXPANDINGMENU1.CONTROL\"  class=\"{grid.componentName}_EXPANDINGMENU1\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "layout_directive_PanelCardEnd",
                "display": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{Data=138be0db-b69e-4e2e-9d92-82c4cfa4ff3c}{I:'vertLineCap'} [Panel Card End: PANELCARD_2]",
                "idInternal": "138be0db-b69e-4e2e-9d92-82c4cfa4ff3c",
                "parentContainer": 1,
                "crc": "4294954819",
                "v": {
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 7,
                        "containerStartID": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                        "color": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}",
                        "icon": "vertLineCap",
                        "parentPanelCardId": "ae5a8bae-191e-403a-a084-c67a19de9f47",
                        "displayText": "[Panel Card End: PANELCARD_2]",
                        "display": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{Data=138be0db-b69e-4e2e-9d92-82c4cfa4ff3c}{I:'vertLineCap'} [Panel Card End: PANELCARD_2]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 5
            },
            {
                "controlType": "layout_directive_PanelNavigatorBegin",
                "display": "{C=#51+111+61,White}{B=White,#51+111+61n}{F=+B}{I:'vertline'}{Data=9dde7f31-df55-442a-82f9-5d2ac4ef1017}{I:'$$web.panel.navigator'} [Panel Navigator: PANELNAVIGATOR_1]  TabBand (LTR)",
                "idInternal": "9dde7f31-df55-442a-82f9-5d2ac4ef1017",
                "lastIndex": 12,
                "parentContainer": 1,
                "crc": "4294945158",
                "v": {
                    "container": {
                        "id": "PANELNAVIGATOR_1",
                        "_isdirty": true
                    },
                    "panelInstance": {
                        "layout": {
                            "size": "70%"
                        },
                        "sections": {
                            "name": "<UsePanelId>",
                            "renderMethod": "Auto-Create-Destroy"
                        },
                        "resize": {
                            "allow": false,
                            "min": "",
                            "max": ""
                        },
                        "grip": {
                            "show": true,
                            "location": "50%"
                        }
                    },
                    "panelNavigator": {
                        "navigatorType": "TabBand",
                        "navigatorFlow": "LTR",
                        "animation": {
                            "type": "slide",
                            "duration": 400
                        },
                        "javascript": {
                            "onBeforeRemove": "",
                            "onBeforeHide": "",
                            "onPanelView": ""
                        },
                        "indicator": {
                            "location": "Auto"
                        },
                        "tabBand": {
                            "location": "Top",
                            "subTheme": "base"
                        }
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "info": {
                        "level": 1,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 8,
                        "color": "{C=#51+111+61,White}{B=White,#51+111+61n}{F=+B}",
                        "icon": "$$web.panel.navigator",
                        "displayText": "[Panel Navigator: PANELNAVIGATOR_1]  TabBand (LTR)",
                        "parentPanelCardId": "",
                        "lastID": "92962bdd-20bb-44bd-ab86-b03558157649",
                        "break": false,
                        "display": "{C=#51+111+61,White}{B=White,#51+111+61n}{F=+B}{I:'vertline'}{Data=9dde7f31-df55-442a-82f9-5d2ac4ef1017}{I:'$$web.panel.navigator'} [Panel Navigator: PANELNAVIGATOR_1]  TabBand (LTR)"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_PanelCardBegin",
                "display": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{I:'vertline'}{Data=a438cfda-9084-40f4-9a98-89be744503c3}{I:'$$web.panel.card'} [Panel Card: PANELCARD_1]",
                "idInternal": "a438cfda-9084-40f4-9a98-89be744503c3",
                "lastIndex": 11,
                "parentContainer": 8,
                "crc": "4294965167",
                "v": {
                    "container": {
                        "id": "PANELCARD_1",
                        "_isdirty": true
                    },
                    "panelInstance": {
                        "layout": {
                            "size": "20%"
                        },
                        "sections": {
                            "name": "<UsePanelId>",
                            "renderMethod": "Auto-Create-Destroy"
                        },
                        "resize": {
                            "allow": false,
                            "min": "",
                            "max": ""
                        },
                        "grip": {
                            "show": true,
                            "location": "50%"
                        }
                    },
                    "panelCard": {
                        "javascript": {
                            "onActivate": "",
                            "onView": ""
                        },
                        "allowBodyScrolling": true,
                        "bodyScrolling": {
                            "axis": "Both"
                        },
                        "pull": {
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "scrolling": {
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "type": "Default",
                        "hasBackgroundImage": true,
                        "_panelCardDirty": false,
                        "_orphanControlHTML": "*gzip:H4sIAAAAAAAAC+PlAgCshaIUAgAAAA==",
                        "pinchToZoom": false,
                        "centerContents": false,
                        "_precalcJS": "*gzip:H4sIAAAAAAAAC71UW0/bMBTea5D4DyYPpJVIgQdeEopUdbAhAUJsYi+VKic+aTwSn8hxekP97ztOk7KWyyZNWhRFzneOv3P7bAUzNjjr3XMF2ZBr0Xne33NMCjkEzHsWkmc46ZVmkcHKOyJThGIRMOvkxKgMKNP8OWZR2D2pybPa03FKHRNwLuSUxRkvy747OBv+uOELrIzLatK+O5PCpAFz2cVIj9TI1O5S9N02eIx5gYoC3fEcVr3H3kNr0ThTVR6BXvWubwdfLsenG9alL5WAeXB6Qk/IIpz7pVxKNQlorQVon6CQ+Tku/feN5fu2GURP0rxrD1nBhbDwSZhzPZGKFi6jpymTCpX5hFGL+u4t6iJlQ8xQs4GSOTcSVdmbyMRtG7cp7H9X4jIjjQ1MydMUtEbdd2XSsdPGhLWjwOgnxGbFDvps5FXU+kQqECOvu+vRG8Mc4srA5ZRG2hl5qK5zPoFLyzzyjp4hI+1ZVZlUlquubdpxK41j0ka9Xq/OD3w/0sCfIqAG+/7FeaRZ26g4A66DCE0akriOX5xBCXKtWbaUmWTIzdDuci/W/J5V8arWchlrzLJW6nwuS1K2JW+lbrC411jgpB5ewBKelbC2FdXLTocOj8crg80+Z77zLyrdMFjp1tg6A4cELWNuUG+4yhRn1CddNYGcdGN6bXMyjBtmj5Jt4zmYJCVQu72TYr4BM0h2IS0naYutoSYvZ/qXUWuGj+NSYjsI9dhgvh133ZV6OPSp00iBk2KbROwV1F48jRqELIuMLwJFGg7dWgyDs69SCFBXEjJRWvVshl5TJoimpawBnIK2HL8h6ptc0qWXVCq2RXZI7h+ejZej4bHDw1cer6HeuBDJo4QZ6Aeg4wnf8UqazW39xvH60L/j3Q/uLm+Gg4fP41PvyB6xbri/9y85k4cigVvT2xyUUht+ndIOKdXwxy3beXdDtgqbAdhatwdA9TS2AWFTbnYG1BiHdBfsmmgnvd1PvwDjSxZfFQcAAA=="
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "info": {
                        "level": 2,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "9dde7f31-df55-442a-82f9-5d2ac4ef1017",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 9,
                        "color": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}",
                        "icon": "$$web.panel.card",
                        "displayText": "[Panel Card: PANELCARD_1]",
                        "parentPanelCardId": "a438cfda-9084-40f4-9a98-89be744503c3",
                        "lastID": "0fb0a19b-41e3-43fb-b9b8-8d81e380f4b2",
                        "break": false,
                        "display": "{C=#104+150+112,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{I:'vertline'}{Data=a438cfda-9084-40f4-9a98-89be744503c3}{I:'$$web.panel.card'} [Panel Card: PANELCARD_1]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\n\nv._dirty = .f.\n\n\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_image",
                "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{I:'vertline'}{Data=a6fafedc-c7f4-47d3-b9a0-0c529473cd23}{I:'$$generic.image'} [Image: (static) Morph Color Animations.gif]<<break>>",
                "idInternal": "a6fafedc-c7f4-47d3-b9a0-0c529473cd23",
                "parentContainer": 9,
                "crc": "4294965893",
                "v": {
                    "ImageMode": "Static",
                    "localxbasic": "",
                    "localjavascript": "",
                    "cssGridItemPropertiesJSON": "",
                    "clientSideconditionalStyle": "",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "breakHeight2": "",
                    "breakHorizontalSpace2": "",
                    "id": "IMAGE_1",
                    "hide": false,
                    "label": "",
                    "labelBubbleHelp": "",
                    "labelClass": "<Default>",
                    "labelStyle": "",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "",
                    "securityGroups": "",
                    "showHideExpn": "",
                    "ShowExpression": "",
                    "advancedImageDisplayJSON": "",
                    "dynamicImage": {
                        "twoStateImage": false,
                        "swapImageName": "",
                        "toggleOnClick": true,
                        "rotationType": "90"
                    },
                    "Imagename": "Morph Color Animations.gif",
                    "ImageAlt": "",
                    "class": "",
                    "style": "",
                    "precalc": {
                        "javascriptClientSideWatches": "",
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 3,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "a438cfda-9084-40f4-9a98-89be744503c3",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 10,
                        "color": "",
                        "icon": "$$generic.image",
                        "displayText": "[Image: (static) Morph Color Animations.gif]",
                        "parentPanelCardId": "a438cfda-9084-40f4-9a98-89be744503c3",
                        "break": true,
                        "display": "{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{I:'vertline'}{Data=a6fafedc-c7f4-47d3-b9a0-0c529473cd23}{I:'$$generic.image'} [Image: (static) Morph Color Animations.gif]<<break>>"
                    },
                    "controlContainerStyle": ""
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.IMAGE_1\" style=\"z-index:10000; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box; ; padding:0;margin:0;\"    >\n\t\t<img src=\"Morph Color Animations.gif\" class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\" title=\"\"  onerror=\"if(typeof {dialog.object} != 'undefined') {dialog.object}._executeEvent('onImageError',{element: this});\"  />\n\t</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_PanelCardEnd",
                "display": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{I:'vertline'}{Data=0fb0a19b-41e3-43fb-b9b8-8d81e380f4b2}{I:'vertLineCap'} [Panel Card End: PANELCARD_1]",
                "idInternal": "0fb0a19b-41e3-43fb-b9b8-8d81e380f4b2",
                "parentContainer": 8,
                "crc": "4294931081",
                "v": {
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "9dde7f31-df55-442a-82f9-5d2ac4ef1017",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 11,
                        "containerStartID": "a438cfda-9084-40f4-9a98-89be744503c3",
                        "color": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}",
                        "icon": "vertLineCap",
                        "parentPanelCardId": "a438cfda-9084-40f4-9a98-89be744503c3",
                        "displayText": "[Panel Card End: PANELCARD_1]",
                        "display": "{C=#104+150+1120,White}{B=White,#104+150+112}{F=+B}{I:'vertline'}{I:'vertline'}{Data=0fb0a19b-41e3-43fb-b9b8-8d81e380f4b2}{I:'vertLineCap'} [Panel Card End: PANELCARD_1]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 9
            },
            {
                "controlType": "layout_directive_PanelNavigatorEnd",
                "display": "{C=#51+111+61,White}{B=White,#51+111+61}{F=+B}{I:'vertline'}{Data=92962bdd-20bb-44bd-ab86-b03558157649}{I:'vertLineCap'} [Panel Navigator End: PANELNAVIGATOR_1]",
                "idInternal": "92962bdd-20bb-44bd-ab86-b03558157649",
                "parentContainer": 1,
                "crc": "4294926695",
                "v": {
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 12,
                        "containerStartID": "9dde7f31-df55-442a-82f9-5d2ac4ef1017",
                        "color": "{C=#51+111+61,White}{B=White,#51+111+61}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[Panel Navigator End: PANELNAVIGATOR_1]",
                        "parentPanelCardId": "",
                        "display": "{C=#51+111+61,White}{B=White,#51+111+61}{F=+B}{I:'vertline'}{Data=92962bdd-20bb-44bd-ab86-b03558157649}{I:'vertLineCap'} [Panel Navigator End: PANELNAVIGATOR_1]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 8
            },
            {
                "controlType": "layout_directive_PanelLayoutEnd",
                "display": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}{Data=625d0184-e0d6-40df-b8b4-cd1c7ab364cc}{I:'vertLineCap'} [Panel Layout End: PANELLAYOUT_1]",
                "idInternal": "625d0184-e0d6-40df-b8b4-cd1c7ab364cc",
                "crc": "4294931403",
                "v": {
                    "localxbasic": "",
                    "localjavascript": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 13,
                        "containerStartID": "74713ebe-b987-40c5-b79c-830884b3963d",
                        "color": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[Panel Layout End: PANELLAYOUT_1]",
                        "parentPanelCardId": "",
                        "display": "{C=#84+180+100,White}{B=White,#84+180+100}{F=+B}{Data=625d0184-e0d6-40df-b8b4-cd1c7ab364cc}{I:'vertLineCap'} [Panel Layout End: PANELLAYOUT_1]"
                    }
                },
                "precalc": {
                    "ControlHTML": "'xbasic\nv._dirty = .f.\n",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 1
            }
        ],
        "builderType": "Dialog2",
        "guid": "7c3598f8-f78c-4d04-90ca-ab01f17385ea",
        "componentName": "MENU",
        "componentFilename": "C:\\BeautyProRewards\\BPR\\BPR.WebProjects\\Default.WebProject\\menu.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": true,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": false,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "284c2992-aec5-4d98-9498-45e487ff4683\n",
        "designPaneIndex": 1,
        "masterPaneC": "controls",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 1,
        "clientSideEventIndexC": "1",
        "lastControlSelected": "insert_layout_directive_Image",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5713",
        "addinBuildNumberHighestUsed": "5713",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "8",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n'xbasic\nv._dirty = .f.\n\n<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.PANELHEADER_1\"   \n\t\t\tA5-containerType=\"panelheader\"\n\t\t\tclass=\"A5CWLayout \"  style=\"\"  ><!--DIV for Container control-->\n<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--FldS--><input\ttype=\"text\" id=\"{grid.componentname}.V.R{grid.rownumber}.TEXTBOX1\" title=\"\"     class=\"edit \" style=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  onchange=\"var tfunc = function() {onChange_textbox1_72293e1b83794b0bae61f6745db5d786.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"   name=\"V.R{grid.rownumber}.TEXTBOX1\"    value=\"\"    />\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t\t</div>\n\t\n'xbasic\n\nv._dirty = .f.\n\n\n\n<div class=\"A5CWLayout\" style=\"width: 4in\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.EXPANDINGMENU1\" name=\"V.R{grid.rownumber}.EXPANDINGMENU1\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.EXPANDINGMENU1.CONTROL\"  class=\"{grid.componentName}_EXPANDINGMENU1\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n'xbasic\nv._dirty = .f.\n\n'xbasic\nv._dirty = .f.\n\n'xbasic\n\nv._dirty = .f.\n\n\n\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.IMAGE_1\" style=\"z-index:10000; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box; ; padding:0;margin:0;\"    >\n\t\t<img src=\"Morph Color Animations.gif\" class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\" title=\"\"  onerror=\"if(typeof {dialog.object} != 'undefined') {dialog.object}._executeEvent('onImageError',{element: this});\"  />\n\t</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n'xbasic\nv._dirty = .f.\n\n'xbasic\nv._dirty = .f.\n\n'xbasic\nv._dirty = .f.\n\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "PANELCARD_2 : 'PANELCARD_2',PANELCARD_1 : 'PANELCARD_1',PANELNAVIGATOR_1 : 'PANELNAVIGATOR_1',PANELLAYOUT_1 : 'PANELLAYOUT_1'",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:edit.base.className|class.dialogInput]=*if_error(p.edit.base.className,\"[class.dialogInput]\")\n[theme:grid.base.grid.dataClassName|class.dialogLabel]=*if_error(p.grid.base.grid.dataClassName,\"[class.dialogLabel]\")\n[theme:button.base.className]=*if_error(p.button.base.className,\"[class.gridButton]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\nPANELHEADER_1: ['textbox1']\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "_jsOnChangeFunctions": "function onChange_ExpandingMenu1_284c2992aec54d98949845e487ff4683(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('EXPANDINGMENU1');};",
            "_jsOnClickFunctions": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": false,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": false,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "flagUseCordovaFederatedAuth": false,
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": false,
            "__freeformLayoutsJS": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: '7c3598f8-f78c-4d04-90ca-ab01f17385ea',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\tonFirestoreAuthStateChanged: function(e) {\n{dialog.object}.onFirestoreLogin(e);\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.TEXTBOX1=\"\"\nvalue.EXPANDINGMENU1=\"\"",
            "setValueProperties2": "value.TEXTBOX1=\"\"\nvalue.EXPANDINGMENU1=\"\"",
            "setValueUnformattedProperties": "value.TEXTBOX1=convert_type(\"\",\"C\")\nvalue.EXPANDINGMENU1=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            },
            "listView": {
                "showlistView": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentValues": "",
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagPrerender": false,
        "panelRootId": "{UXPRERENDEROUTPUTDIV}",
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "_sections": {
            "flagHasSections": false
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": false,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/a5.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "A5SaveTimeStamp": "20241021140341756",
        "a_actionJavascript": [
            {
                "actionGuid": "0d2f2ca2-3d0c-4349-a9b6-730dc750c225",
                "scriptMetaData": "<a_ajs<[1]<display=\"{I:'$$web.component.dialog'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Open a UX component{T=4}{I:'a5_vertical_line'}\">\n<action=\"Open a UX component\">\n<icon=\"$$web.component.dialog\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_openGenericComponent(v,wf,pv,dlg_mode,\\\"dialog2\\\")\">\n<metaData=<<%str1%\n<targetGridDefinition=<<%str%\n<gridName=\"Countries_ux\">\n<gridAlias=\"<DefaultAlias>\">\n<argumentBindings=\"\">\n<overrideSettings=\"\">\n<useSameStyleAsParentGrid=.T.>\n<customSettingOverridesJSON=\"\">\n<order=\"\">\n<localArguments=\"\">\n<placeHolderValues=\"\">\n%str%>\n<flagShowSynchronizePrompts=.T.>\n<parentNavigator=\"PANELNAVIGATOR_1\">\n<dynamicPanelTitle=\"Adresses\">\n<dynamicPanelClassName=\"\">\n<dynamicPanelSetFocus=.T.>\n<waitMessagePanel=\"\">\n<dynamicPanelCanClose=.T.>\n<reusePanelCard=.T.>\n<panelWindow<position=\"Right\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<actionSheetWindow<position=\"Bottom\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<grid<gridName=\"Countries_ux\">\n<alias=\"<DefaultAlias>\">\n<userFilter=\"\">\n<baseFilter=\"\">\n<link=\"\">\n<order=\"\">\n<argumentDefinitions=\"\">\n<argumentBindings=\"\">\n<useMasterStyle=.T.>\n<overrideSettings=\"\">\n<customSettingOverridesJSON=\"\">\n<debugMode=.F.>\n<timer=.F.>\n<queryEcho=.F.>\n<workingMessage=\"<img src=\\\"css/A5System/Images/wait.gif\\\" /> Computing Grid. Please wait...\">\n<beforeExecuteClientSideFunctionName=\"\">\n>\n<jsonformdefinition=\"{}\">\n<jsonformvarname=\"\">\n<useStaticHTML=.F.>\n<refreshUXOnSynchronize=.T.>\n<refreshUXJavascriptFunction=\"\">\n<allowAutoCloseIfDirty=.F.>\n<dialog<showWaitMessageOnRefresh=.T.>\n<waitMessageText=\"Wait...\">\n<waitMessageIcon=\"css/A5System/Images/wait.gif\">\n<useCachedDialog=.T.>\n>\n<specialMode=\"PopulateDialog\">\n<gridRecordMode=\"\">\n<populateDialog=.F.>\n<getPrimaryKeyFrom=\"ControlsOnCurrentComponent\">\n<primaryKeyValue=\"\">\n<controlsContainingPrimaryKey=\"\">\n<variableContainingPrimaryKey=\"\">\n<targetType=\"DynamicPanel\">\n<targetDIVid=\"\">\n<targetDIVcanHide=.T.>\n<targetDIVHideHyperlink=\"Close\">\n<targetDIVStyle=\"\">\n<targetPanel=\"\">\n<setfocustotargetpanel=.F.>\n<dockWindow=.F.>\n<dockLocation=\"Bottom\">\n<windowNameExplicit=\"<Default>\">\n<ajaxWindowType=\"Modal-Popup\">\n<ajaxWindowPositionAttribute=\"\">\n<ajaxWindowPositionAttributeEnglish=\"\">\n<ajaxWindowPositionAttributeDD=\"\">\n<ajaxWindowPositionAttributeEnglishDD=\"\">\n<ajaxWindowModalLockClassName=\"<Default>\">\n<ajaxWindowTitle=\"Window\">\n<ajaxPaneTitle=\"Pane\">\n<userCanclosePane=.T.>\n<ajaxPaneAlwaysUseNewPane=.T.>\n<ajaxWindowReuseExistingWindow=.F.>\n<ajaxWindowHeight=\"5in\">\n<ajaxWindowWidth=\"8in\">\n<ajaxWindowisResizable=.T.>\n<ajaxWindowWorkingMessage=\"Working...\">\n<ajaxWindowWorkingMessageIcon=\"css/A5System/Images/wait.gif\">\n<ajaxWindowWorkingMessageUseCSSAnimation=.F.>\n<ajaxWindowWorkingMessageCSSAnimationSettings<size=\"32\">\n>\n<ajaxWindowTitlePosition=\"Top\">\n<ajaxWindowTitleDirection=\"ltr\">\n<ajaxWindowTitleHasClose=.T.>\n<ajaxWindowTitleShow=.T.>\n<ajaxWindowDisableMove=.F.>\n<ajaxWindowRefreshGridOnClose=\"None\">\n<window<hasCustomButtons=.F.>\n<buttons>\n<buttonCount=0>\n<customButtonsInLineStyle=\"\">\n<tbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<header<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<footer<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<bbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<onInitialize=\"\">\n<onBeforeShow=\"\">\n<onShow=\"\">\n<onBeforeHide=\"\">\n<onHide=\"\">\n<onFocus=\"\">\n<onMove=\"\">\n<onResize=\"\">\n<animation<hasAnimation=.F.>\n<show<method=\"Fade\">\n<speed=\"Slow\">\n>\n<hide<method=\"None\">\n<speed=\"Fast\">\n>\n>\n<backgroundStyle=\"\">\n<centerContentsVertical=.F.>\n<centerContentsHorizontal=.F.>\n<pointer<has=.F.>\n<location=\"Auto\">\n>\n<warnOnCloseIfChildGridIsDirty=.T.>\n<subtheme=\"\">\n>\n<parentTabPaneRefreshGridOnClose=.F.>\n<javascriptTabPane<onBeforeChange=\"\">\n<onChange=\"\">\n<onRightClick=\"\">\n<onInitial=\"\">\n<onBeforeRemove=\"\">\n<onRemove=\"\">\n>\n<ajaxFailedMessage=\"\">\n<offlineJavascript=\"\">\n<ajaxcallbacktimeout=\"<Default>\">\n<optimization<method=\"AjaxCallback\">\n<jsfunction=\"\">\n>\n%str1%>\n<javascriptAttribute=\"{grid.componentName}_O_C137F1562829455C87BDE9AF43890377({grid.rownumber},'{grid.rowId}',this);\">\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=<<%str%\n\nwindow['{grid.componentName}_O_C137F1562829455C87BDE9AF43890377'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Countries_ux';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_COUNTRIES__BIDA';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Adresses';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Countries__bida';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Adresses';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'hide'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}\n%str%>\n<xbasicFunctions=\"\">\n>\n>\n<flagRunSynchronously=.F.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            },
            {
                "actionGuid": "34e3deab-8a5c-48c8-8e40-7812aabc110b",
                "scriptMetaData": "<a_ajs<[1]<display=\"{I:'$$web.component.dialog'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Open a UX component{T=4}{I:'a5_vertical_line'}\">\n<action=\"Open a UX component\">\n<icon=\"$$web.component.dialog\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_openGenericComponent(v,wf,pv,dlg_mode,\\\"dialog2\\\")\">\n<metaData=<<%str1%\n<targetGridDefinition=<<%str%\n<gridName=\"Salons\">\n<gridAlias=\"<DefaultAlias>\">\n<argumentBindings=\"\">\n<overrideSettings=\"\">\n<useSameStyleAsParentGrid=.T.>\n<customSettingOverridesJSON=\"\">\n<order=\"\">\n<localArguments=\"\">\n<placeHolderValues=\"\">\n%str%>\n<flagShowSynchronizePrompts=.T.>\n<parentNavigator=\"PANELNAVIGATOR_1\">\n<dynamicPanelTitle=\"Salons\">\n<dynamicPanelClassName=\"\">\n<dynamicPanelSetFocus=.T.>\n<waitMessagePanel=\"\">\n<dynamicPanelCanClose=.T.>\n<reusePanelCard=.T.>\n<panelWindow<position=\"Right\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<actionSheetWindow<position=\"Bottom\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<grid<gridName=\"Salons\">\n<alias=\"<DefaultAlias>\">\n<userFilter=\"\">\n<baseFilter=\"\">\n<link=\"\">\n<order=\"\">\n<argumentDefinitions=\"\">\n<argumentBindings=\"\">\n<useMasterStyle=.T.>\n<overrideSettings=\"\">\n<customSettingOverridesJSON=\"\">\n<debugMode=.F.>\n<timer=.F.>\n<queryEcho=.F.>\n<workingMessage=\"<img src=\\\"css/A5System/Images/wait.gif\\\" /> Computing Grid. Please wait...\">\n<beforeExecuteClientSideFunctionName=\"\">\n>\n<jsonformdefinition=\"{}\">\n<jsonformvarname=\"\">\n<useStaticHTML=.F.>\n<refreshUXOnSynchronize=.T.>\n<refreshUXJavascriptFunction=\"\">\n<allowAutoCloseIfDirty=.F.>\n<dialog<showWaitMessageOnRefresh=.T.>\n<waitMessageText=\"Wait...\">\n<waitMessageIcon=\"css/A5System/Images/wait.gif\">\n<useCachedDialog=.F.>\n>\n<specialMode=\"PopulateDialog\">\n<gridRecordMode=\"\">\n<populateDialog=.F.>\n<getPrimaryKeyFrom=\"ControlsOnCurrentComponent\">\n<primaryKeyValue=\"\">\n<controlsContainingPrimaryKey=\"\">\n<variableContainingPrimaryKey=\"\">\n<targetType=\"DynamicPanel\">\n<targetDIVid=\"\">\n<targetDIVcanHide=.T.>\n<targetDIVHideHyperlink=\"Close\">\n<targetDIVStyle=\"\">\n<targetPanel=\"\">\n<setfocustotargetpanel=.F.>\n<dockWindow=.F.>\n<dockLocation=\"Bottom\">\n<windowNameExplicit=\"<Default>\">\n<ajaxWindowType=\"Modal-Popup\">\n<ajaxWindowPositionAttribute=\"\">\n<ajaxWindowPositionAttributeEnglish=\"\">\n<ajaxWindowPositionAttributeDD=\"\">\n<ajaxWindowPositionAttributeEnglishDD=\"\">\n<ajaxWindowModalLockClassName=\"<Default>\">\n<ajaxWindowTitle=\"Window\">\n<ajaxPaneTitle=\"Pane\">\n<userCanclosePane=.T.>\n<ajaxPaneAlwaysUseNewPane=.T.>\n<ajaxWindowReuseExistingWindow=.F.>\n<ajaxWindowHeight=\"5in\">\n<ajaxWindowWidth=\"8in\">\n<ajaxWindowisResizable=.T.>\n<ajaxWindowWorkingMessage=\"Working...\">\n<ajaxWindowWorkingMessageIcon=\"css/A5System/Images/wait.gif\">\n<ajaxWindowWorkingMessageUseCSSAnimation=.F.>\n<ajaxWindowWorkingMessageCSSAnimationSettings<size=\"32\">\n>\n<ajaxWindowTitlePosition=\"Top\">\n<ajaxWindowTitleDirection=\"ltr\">\n<ajaxWindowTitleHasClose=.T.>\n<ajaxWindowTitleShow=.T.>\n<ajaxWindowDisableMove=.F.>\n<ajaxWindowRefreshGridOnClose=\"None\">\n<window<hasCustomButtons=.F.>\n<buttons>\n<buttonCount=0>\n<customButtonsInLineStyle=\"\">\n<tbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<header<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<footer<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<bbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<onInitialize=\"\">\n<onBeforeShow=\"\">\n<onShow=\"\">\n<onBeforeHide=\"\">\n<onHide=\"\">\n<onFocus=\"\">\n<onMove=\"\">\n<onResize=\"\">\n<animation<hasAnimation=.F.>\n<show<method=\"Fade\">\n<speed=\"Slow\">\n>\n<hide<method=\"None\">\n<speed=\"Fast\">\n>\n>\n<backgroundStyle=\"\">\n<centerContentsVertical=.F.>\n<centerContentsHorizontal=.F.>\n<pointer<has=.F.>\n<location=\"Auto\">\n>\n<warnOnCloseIfChildGridIsDirty=.T.>\n<subtheme=\"\">\n>\n<parentTabPaneRefreshGridOnClose=.F.>\n<javascriptTabPane<onBeforeChange=\"\">\n<onChange=\"\">\n<onRightClick=\"\">\n<onInitial=\"\">\n<onBeforeRemove=\"\">\n<onRemove=\"\">\n>\n<ajaxFailedMessage=\"\">\n<offlineJavascript=\"\">\n<ajaxcallbacktimeout=\"<Default>\">\n<optimization<method=\"AjaxCallback\">\n<jsfunction=\"\">\n>\n%str1%>\n<javascriptAttribute=\"{grid.componentName}_O_80B187B4983745B78AA52278A52C1978({grid.rownumber},'{grid.rowId}',this);\">\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=<<%str%\n\nwindow['{grid.componentName}_O_80B187B4983745B78AA52278A52C1978'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Salons';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_SALONS_IGEA';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Salons';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Salons_igea';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Salons';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}\n%str%>\n<xbasicFunctions=\"\">\n>\n>\n<flagRunSynchronously=.F.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            },
            {
                "actionGuid": "c95d2bd3-acda-40fa-a6af-4313c257f092",
                "scriptMetaData": "<a_ajs<[1]<display=\"{I:'$$web.component.dialog'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Open a UX component{T=4}{I:'a5_vertical_line'}\">\n<action=\"Open a UX component\">\n<icon=\"$$web.component.dialog\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_openGenericComponent(v,wf,pv,dlg_mode,\\\"dialog2\\\")\">\n<metaData=<<%str1%\n<targetGridDefinition=<<%str%\n<gridName=\"Gifts\">\n<gridAlias=\"<DefaultAlias>\">\n<argumentBindings=\"\">\n<overrideSettings=\"\">\n<useSameStyleAsParentGrid=.T.>\n<customSettingOverridesJSON=\"\">\n<order=\"\">\n<localArguments=\"\">\n<placeHolderValues=\"\">\n%str%>\n<flagShowSynchronizePrompts=.T.>\n<parentNavigator=\"PANELNAVIGATOR_1\">\n<dynamicPanelTitle=\"Gifts\">\n<dynamicPanelClassName=\"\">\n<dynamicPanelSetFocus=.T.>\n<waitMessagePanel=\"\">\n<dynamicPanelCanClose=.T.>\n<reusePanelCard=.T.>\n<panelWindow<position=\"Right\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<actionSheetWindow<position=\"Bottom\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<grid<gridName=\"Gifts\">\n<alias=\"<DefaultAlias>\">\n<userFilter=\"\">\n<baseFilter=\"\">\n<link=\"\">\n<order=\"\">\n<argumentDefinitions=\"\">\n<argumentBindings=\"\">\n<useMasterStyle=.T.>\n<overrideSettings=\"\">\n<customSettingOverridesJSON=\"\">\n<debugMode=.F.>\n<timer=.F.>\n<queryEcho=.F.>\n<workingMessage=\"<img src=\\\"css/A5System/Images/wait.gif\\\" /> Computing Grid. Please wait...\">\n<beforeExecuteClientSideFunctionName=\"\">\n>\n<jsonformdefinition=\"{}\">\n<jsonformvarname=\"\">\n<useStaticHTML=.F.>\n<refreshUXOnSynchronize=.T.>\n<refreshUXJavascriptFunction=\"\">\n<allowAutoCloseIfDirty=.F.>\n<dialog<showWaitMessageOnRefresh=.F.>\n<waitMessageText=\"Wait...\">\n<waitMessageIcon=\"css/A5System/Images/wait.gif\">\n<useCachedDialog=.F.>\n>\n<specialMode=\"PopulateDialog\">\n<gridRecordMode=\"\">\n<populateDialog=.F.>\n<getPrimaryKeyFrom=\"ControlsOnCurrentComponent\">\n<primaryKeyValue=\"\">\n<controlsContainingPrimaryKey=\"\">\n<variableContainingPrimaryKey=\"\">\n<targetType=\"DynamicPanel\">\n<targetDIVid=\"\">\n<targetDIVcanHide=.T.>\n<targetDIVHideHyperlink=\"Close\">\n<targetDIVStyle=\"\">\n<targetPanel=\"\">\n<setfocustotargetpanel=.F.>\n<dockWindow=.F.>\n<dockLocation=\"Bottom\">\n<windowNameExplicit=\"<Default>\">\n<ajaxWindowType=\"Modal-Popup\">\n<ajaxWindowPositionAttribute=\"\">\n<ajaxWindowPositionAttributeEnglish=\"\">\n<ajaxWindowPositionAttributeDD=\"\">\n<ajaxWindowPositionAttributeEnglishDD=\"\">\n<ajaxWindowModalLockClassName=\"<Default>\">\n<ajaxWindowTitle=\"Window\">\n<ajaxPaneTitle=\"Pane\">\n<userCanclosePane=.T.>\n<ajaxPaneAlwaysUseNewPane=.T.>\n<ajaxWindowReuseExistingWindow=.F.>\n<ajaxWindowHeight=\"5in\">\n<ajaxWindowWidth=\"8in\">\n<ajaxWindowisResizable=.T.>\n<ajaxWindowWorkingMessage=\"Working...\">\n<ajaxWindowWorkingMessageIcon=\"css/A5System/Images/wait.gif\">\n<ajaxWindowWorkingMessageUseCSSAnimation=.F.>\n<ajaxWindowWorkingMessageCSSAnimationSettings<size=\"32\">\n>\n<ajaxWindowTitlePosition=\"Top\">\n<ajaxWindowTitleDirection=\"ltr\">\n<ajaxWindowTitleHasClose=.T.>\n<ajaxWindowTitleShow=.T.>\n<ajaxWindowDisableMove=.F.>\n<ajaxWindowRefreshGridOnClose=\"None\">\n<window<hasCustomButtons=.F.>\n<buttons>\n<buttonCount=0>\n<customButtonsInLineStyle=\"\">\n<tbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<header<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<footer<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<bbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<onInitialize=\"\">\n<onBeforeShow=\"\">\n<onShow=\"\">\n<onBeforeHide=\"\">\n<onHide=\"\">\n<onFocus=\"\">\n<onMove=\"\">\n<onResize=\"\">\n<animation<hasAnimation=.F.>\n<show<method=\"Fade\">\n<speed=\"Slow\">\n>\n<hide<method=\"None\">\n<speed=\"Fast\">\n>\n>\n<backgroundStyle=\"\">\n<centerContentsVertical=.F.>\n<centerContentsHorizontal=.F.>\n<pointer<has=.F.>\n<location=\"Auto\">\n>\n<warnOnCloseIfChildGridIsDirty=.T.>\n<subtheme=\"\">\n>\n<parentTabPaneRefreshGridOnClose=.F.>\n<javascriptTabPane<onBeforeChange=\"\">\n<onChange=\"\">\n<onRightClick=\"\">\n<onInitial=\"\">\n<onBeforeRemove=\"\">\n<onRemove=\"\">\n>\n<ajaxFailedMessage=\"\">\n<offlineJavascript=\"\">\n<ajaxcallbacktimeout=\"<Default>\">\n<optimization<method=\"AjaxCallback\">\n<jsfunction=\"\">\n>\n%str1%>\n<javascriptAttribute=\"{grid.componentName}_O_8E46A716783E40F28B0AACAD22551817({grid.rownumber},'{grid.rowId}',this);\">\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=<<%str%\n\nwindow['{grid.componentName}_O_8E46A716783E40F28B0AACAD22551817'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Gifts';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_GIFTS_GAJH';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Gifts';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Gifts_gajh';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Gifts';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}\n%str%>\n<xbasicFunctions=\"\">\n>\n>\n<flagRunSynchronously=.F.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            },
            {
                "actionGuid": "92ddd50e-4cd7-4c22-84cf-13939a04c781",
                "scriptMetaData": "<a_ajs<[1]<display=\"{I:'$$web.component.dialog'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Open a UX component{T=4}{I:'a5_vertical_line'}\">\n<action=\"Open a UX component\">\n<icon=\"$$web.component.dialog\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_openGenericComponent(v,wf,pv,dlg_mode,\\\"dialog2\\\")\">\n<metaData=<<%str1%\n<targetGridDefinition=<<%str%\n<gridName=\"HairdressersPoints\">\n<gridAlias=\"<DefaultAlias>\">\n<argumentBindings=\"\">\n<overrideSettings=\"\">\n<useSameStyleAsParentGrid=.T.>\n<customSettingOverridesJSON=\"\">\n<order=\"\">\n<localArguments=\"\">\n<placeHolderValues=\"\">\n%str%>\n<flagShowSynchronizePrompts=.T.>\n<parentNavigator=\"PANELNAVIGATOR_1\">\n<dynamicPanelTitle=\"Distribute Points\">\n<dynamicPanelClassName=\"\">\n<dynamicPanelSetFocus=.T.>\n<waitMessagePanel=\"\">\n<dynamicPanelCanClose=.T.>\n<reusePanelCard=.T.>\n<panelWindow<position=\"Right\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<actionSheetWindow<position=\"Bottom\">\n<animationOpen=.T.>\n<animationClose=.T.>\n>\n<grid<gridName=\"HairdressersPoints\">\n<alias=\"<DefaultAlias>\">\n<userFilter=\"\">\n<baseFilter=\"\">\n<link=\"\">\n<order=\"\">\n<argumentDefinitions=\"\">\n<argumentBindings=\"\">\n<useMasterStyle=.T.>\n<overrideSettings=\"\">\n<customSettingOverridesJSON=\"\">\n<debugMode=.F.>\n<timer=.F.>\n<queryEcho=.F.>\n<workingMessage=\"<img src=\\\"css/A5System/Images/wait.gif\\\" /> Computing Grid. Please wait...\">\n<beforeExecuteClientSideFunctionName=\"\">\n>\n<jsonformdefinition=\"{}\">\n<jsonformvarname=\"\">\n<useStaticHTML=.F.>\n<refreshUXOnSynchronize=.T.>\n<refreshUXJavascriptFunction=\"\">\n<allowAutoCloseIfDirty=.F.>\n<dialog<showWaitMessageOnRefresh=.F.>\n<waitMessageText=\"Wait...\">\n<waitMessageIcon=\"css/A5System/Images/wait.gif\">\n<useCachedDialog=.F.>\n>\n<specialMode=\"PopulateDialog\">\n<gridRecordMode=\"\">\n<populateDialog=.F.>\n<getPrimaryKeyFrom=\"ControlsOnCurrentComponent\">\n<primaryKeyValue=\"\">\n<controlsContainingPrimaryKey=\"\">\n<variableContainingPrimaryKey=\"\">\n<targetType=\"DynamicPanel\">\n<targetDIVid=\"\">\n<targetDIVcanHide=.T.>\n<targetDIVHideHyperlink=\"Close\">\n<targetDIVStyle=\"\">\n<targetPanel=\"\">\n<setfocustotargetpanel=.F.>\n<dockWindow=.F.>\n<dockLocation=\"Bottom\">\n<windowNameExplicit=\"<Default>\">\n<ajaxWindowType=\"Modal-Popup\">\n<ajaxWindowPositionAttribute=\"\">\n<ajaxWindowPositionAttributeEnglish=\"\">\n<ajaxWindowPositionAttributeDD=\"\">\n<ajaxWindowPositionAttributeEnglishDD=\"\">\n<ajaxWindowModalLockClassName=\"<Default>\">\n<ajaxWindowTitle=\"Window\">\n<ajaxPaneTitle=\"Pane\">\n<userCanclosePane=.T.>\n<ajaxPaneAlwaysUseNewPane=.T.>\n<ajaxWindowReuseExistingWindow=.F.>\n<ajaxWindowHeight=\"5in\">\n<ajaxWindowWidth=\"8in\">\n<ajaxWindowisResizable=.T.>\n<ajaxWindowWorkingMessage=\"Working...\">\n<ajaxWindowWorkingMessageIcon=\"css/A5System/Images/wait.gif\">\n<ajaxWindowWorkingMessageUseCSSAnimation=.F.>\n<ajaxWindowWorkingMessageCSSAnimationSettings<size=\"32\">\n>\n<ajaxWindowTitlePosition=\"Top\">\n<ajaxWindowTitleDirection=\"ltr\">\n<ajaxWindowTitleHasClose=.T.>\n<ajaxWindowTitleShow=.T.>\n<ajaxWindowDisableMove=.F.>\n<ajaxWindowRefreshGridOnClose=\"None\">\n<window<hasCustomButtons=.F.>\n<buttons>\n<buttonCount=0>\n<customButtonsInLineStyle=\"\">\n<tbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<header<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<footer<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<bbar<show=.F.>\n<html=\"\">\n<style=\"\">\n>\n<onInitialize=\"\">\n<onBeforeShow=\"\">\n<onShow=\"\">\n<onBeforeHide=\"\">\n<onHide=\"\">\n<onFocus=\"\">\n<onMove=\"\">\n<onResize=\"\">\n<animation<hasAnimation=.F.>\n<show<method=\"Fade\">\n<speed=\"Slow\">\n>\n<hide<method=\"None\">\n<speed=\"Fast\">\n>\n>\n<backgroundStyle=\"\">\n<centerContentsVertical=.F.>\n<centerContentsHorizontal=.F.>\n<pointer<has=.F.>\n<location=\"Auto\">\n>\n<warnOnCloseIfChildGridIsDirty=.T.>\n<subtheme=\"\">\n>\n<parentTabPaneRefreshGridOnClose=.F.>\n<javascriptTabPane<onBeforeChange=\"\">\n<onChange=\"\">\n<onRightClick=\"\">\n<onInitial=\"\">\n<onBeforeRemove=\"\">\n<onRemove=\"\">\n>\n<ajaxFailedMessage=\"\">\n<offlineJavascript=\"\">\n<ajaxcallbacktimeout=\"<Default>\">\n<optimization<method=\"AjaxCallback\">\n<jsfunction=\"\">\n>\n%str1%>\n<javascriptAttribute=\"{grid.componentName}_O_419B56E2EC004AED94CCFE1DBB23E13E({grid.rownumber},'{grid.rowId}',this);\">\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=<<%str%\n\nwindow['{grid.componentName}_O_419B56E2EC004AED94CCFE1DBB23E13E'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'HairdressersPoints';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_HAIRDRESSE_DGGC';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Distribute Points';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Hairdresse_dggc';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Distribute Points';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}\n%str%>\n<xbasicFunctions=\"\">\n>\n>\n<flagRunSynchronously=.F.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            }
        ],
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "showPulseEffect": true,
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "suppressJavascriptCodeWarning": false,
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "restorePanelSizes": true,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "simulatedcultureNumber": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": true,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": true,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "populateArgumentsFromQueryString": false,
        "_alphasoftwareBucketName": "",
        "staticHTMLFileJSON": "",
        "showTimingForAjaxCallbacks": false,
        "__LPhostName": "Chrome",
        "_style_isInherited": true,
        "lastbutton": "cancel",
        "_analyzecontainersjs": true,
        "__idinternalCurrentControl": "284c2992-aec5-4d98-9498-45e487ff4683",
        "__nameCurrentControl": "ExpandingMenu1",
        "_flagForceRecalcChildren": true,
        "_repeatingSectionPendingRecalc": "\n",
        "__flagHasMacro": false,
        "__timeToMakeRequest": 0,
        "__staticMode": "",
        "__componentnotfound": false,
        "__flagRecursive": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha-Dark-Green",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "_passwordReset": false,
        "loadFirestoreClient": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "livePreview_permissions_friendly": "",
        "cachecomponent": false,
        "_crcXbEvents": 4294957026,
        "_crcJSFunctions": 43605,
        "_crcJSEvents": 43605,
        "_treeErrors": "",
        "_flagDoTreeview": true,
        "_move": {
            "index": 1,
            "targetIndex": 4,
            "count": 3
        },
        "favoriteControls": "",
        "__allowCascadingRecalc": true,
        "_containerstorecalc": "",
        "_choices": "base\nflared\n",
        "a_UnboundActionJavascript": [
            {
                "idInternal": "f39a035a-67b5-4442-87c4-0d8b967cb566",
                "name": "OpenAddresses",
                "comment": "",
                "javascript": {
                    "unbound": "/* actionJavascript:0d2f2ca2-3d0c-4349-a9b6-730dc750c225 */\n{grid.componentName}_O_C137F1562829455C87BDE9AF43890377({grid.rownumber},'{grid.rowId}',this);"
                },
                "javascriptDeclarationsRow": {
                    "unbound": ""
                },
                "javascriptDeclarationsGlobal": {
                    "unbound": "window['{grid.componentName}_O_C137F1562829455C87BDE9AF43890377'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Countries_ux';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_COUNTRIES__BIDA';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Adresses';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Countries__bida';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Adresses';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'hide'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}"
                },
                "xbasicFunctions": {
                    "unbound": ""
                },
                "clientSideXbasicFunctions": {
                    "unbound": ""
                },
                "part": ""
            },
            {
                "idInternal": "189a62ad-cc04-44b6-8918-a9807d71fb5d",
                "name": "OpenSalon",
                "comment": "",
                "javascript": {
                    "unbound": "/* actionJavascript:34e3deab-8a5c-48c8-8e40-7812aabc110b */\n{grid.componentName}_O_80B187B4983745B78AA52278A52C1978({grid.rownumber},'{grid.rowId}',this);"
                },
                "javascriptDeclarationsRow": {
                    "unbound": ""
                },
                "javascriptDeclarationsGlobal": {
                    "unbound": "window['{grid.componentName}_O_80B187B4983745B78AA52278A52C1978'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Salons';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_SALONS_IGEA';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Salons';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Salons_igea';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Salons';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}"
                },
                "xbasicFunctions": {
                    "unbound": ""
                },
                "clientSideXbasicFunctions": {
                    "unbound": ""
                },
                "part": ""
            },
            {
                "idInternal": "c68dc182-e074-4641-a4dd-5cdd84036702",
                "name": "OpneGifts",
                "comment": "",
                "javascript": {
                    "unbound": "/* actionJavascript:c95d2bd3-acda-40fa-a6af-4313c257f092 */\n{grid.componentName}_O_8E46A716783E40F28B0AACAD22551817({grid.rownumber},'{grid.rowId}',this);"
                },
                "javascriptDeclarationsRow": {
                    "unbound": ""
                },
                "javascriptDeclarationsGlobal": {
                    "unbound": "window['{grid.componentName}_O_8E46A716783E40F28B0AACAD22551817'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'Gifts';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_GIFTS_GAJH';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Gifts';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Gifts_gajh';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Gifts';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}"
                },
                "xbasicFunctions": {
                    "unbound": ""
                },
                "clientSideXbasicFunctions": {
                    "unbound": ""
                },
                "part": ""
            },
            {
                "idInternal": "755603b6-d7fa-47fa-9385-33ba647a4e88",
                "name": "OpenDistPoint",
                "comment": "",
                "javascript": {
                    "unbound": "/* actionJavascript:92ddd50e-4cd7-4c22-84cf-13939a04c781 */\n{grid.componentName}_O_419B56E2EC004AED94CCFE1DBB23E13E({grid.rownumber},'{grid.rowId}',this);"
                },
                "javascriptDeclarationsRow": {
                    "unbound": ""
                },
                "javascriptDeclarationsGlobal": {
                    "unbound": "window['{grid.componentName}_O_419B56E2EC004AED94CCFE1DBB23E13E'] = function(rowNum,rowId,objEle) {\nvar runMethod = 'ajax';\n\nif(runMethod == 'ajax') {\nif(typeof {dialog.object}._onlineStatus != 'undefined') { \n\tif({dialog.object}._onlineStatus == 'offline') { \n\t\t( function() {  }() );\n\t\t{dialog.object}._executeEvent('onAjaxCallbackNotAvailable', {xbasicFunctionName: '', ajaxEvent: 'OpenComponent'})\n\t\treturn false;\n\t}\n}\t\t\n\t\n};\n\nvar go = new Object();\n\ngo.ajaxFailedMessage = '';\ngo.ajaxCallbackTimeout = {dialog.object}.ajaxCallbackTimeout;\n\ngo.dialog2Name = 'HairdressersPoints';\ngo.type = 'dialog2';\ngo.alias = '{GRID.COMPONENTNAME}_HAIRDRESSE_DGGC';;\ngo.submitCurrentFieldValues = true;\ngo.sourceGridPart = 'O';\ngo.sourceGridRowNumber = '1';\ngo.workingMessage = '<img src=\\'css/A5System/Images/wait.gif\\' />Working...';\ngo.placeholderValues = '';\ngo.argumentBinding = '';\n\ngo._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.gridId != 'undefined') go._thisGridAlias = {grid.object}.gridId;\nif(typeof {grid.object}.dialogId != 'undefined') {\n\tgo._thisGridAlias = {grid.object}.dialogId;\n}\n\t\n\ngo._thisGridGUID = {grid.object}.componentGUID;\ngo._gridCurrentFilter = {grid.object}._gridFilter;\n\n\ngo._gridCurrentOrder = {grid.object}._gridOrder;\ngo._gridCurrentArguments = {grid.object}._gridArguments;\ngo._gridCurrentDBType = {grid.object}._gridDBType;\ngo.overrideSettings = 'Style_name = `{Grid.style}`||Style_name = `{Grid.style}`'+'||';\ngo.a5_default_path = '{grid.defaultPath}';\n\ngo.dynamicPanel = true;\n\ngo.setFocusToDynamicPanel = true;\ngo.parentPanelNavigator = 'PANELNAVIGATOR_1';\ngo.dynamicPanelTitle = 'Distribute Points';\ngo.waitMessageTarget = '';\ngo.canCloseDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\n\n\n\ngo.dialog2Div = '';\n\nvar flagSetFocusToDynamicPanel = true;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar panelName = '{Grid.componentname}_Hairdresse_dggc';\n\nvar existingPanel = pNavObj.getPanel(panelName);\nvar canCloseDynamicPanel = true;\nvar canCloseFlag = '';\nif(canCloseDynamicPanel) canCloseFlag = 'close';\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\t\n\t\n} else {\n\tvar panelTitle = 'Distribute Points';;\n\tvar dynamicPanelCard = new A5.PanelCard({ \n\t\talias: panelName,\n\t\tonBeforeDestroy: function() { \n\t\t\tvar obj = window[this.alias.toUpperCase()+ '_DlgObj']; \n\t\t\tif(obj) {obj._destroy(); console.log('Destroy: ' + this.alias);   }; \n\t\t\tvar ele = $(this.alias + '.R1'); if(ele) ele.innerHYML = ''; \n\t\t\twindow[this.alias.toUpperCase()+ '_DlgObj'] = false;;  \n\t\t},\n\t\ttheme : '{dialog.style}',\n\t\tbody: { className: '', content: { type: 'html', src: ''}\n       \t }\n    })\n\t//add the new Panel Card to the Panel Navigator\n\tpNavObj.addPanel({name: panelName ,title: panelTitle,src : dynamicPanelCard\t, close: canCloseFlag, closeBehavior: 'remove'});\n\t//set focus to the Panel just added.\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(panelName);\n\tvar id = pNavObj.getPanel(panelName).src.getPanelId('body');\n\tif('v2.componentType' == 'jsonform') { \n\t\t//alert('render json form at: ' + id )\n\t\tvar ele = $(id);\n\t\tgo.renderJSONForm(ele);\n\t}\n\t\n\t\n}\n\n\n\n\npanelNavigatorName = 'PANELNAVIGATOR_1';\npanelCardName = panelName;\nvar pNavObj = {dialog.object}.panelGet(panelNavigatorName);\nvar panelCardId = pNavObj.getPanel(panelCardName).src.getPanelId('body');\n\n\n\n\t\nvar __showWaitMessage = function() { {dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\t}\n\ngo.addPanelServerSide = false;\nvar pNavObj = {dialog.object}.panelGet('PANELNAVIGATOR_1');\nvar existingPanel = pNavObj.getPanel(go.alias.toUpperCase());\nif(existingPanel) { \n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n}\nvar existingObject = false;\nvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\nif(obj) {existingObject = true;}\nexistingObject = false //removeThisLineCachingEnabled\nif(existingObject == false || existingObject == null) { \n\t//{dialog.object}.showWaitMessage('page',{useCSSAnimation: false,message: 'Working...',icon: 'css/A5System/Images/wait.gif'});\n\t//alert('initial render of ux');\n\t\n\t{dialog.object}._panelBodyId = panelCardId;\n\tgo.panelCardId = panelCardId;\n\tgo.dialog2Div = panelCardId;\n\t\n\t\n\tif('dialog2' == 'jsonform') { \n\t\t//json form is rendered when the PanelCard is created\n\t\t\n\t} else {\n\t\tA5.component.runGenericComponent(go);if(typeof __showWaitMessage != 'undefined') __showWaitMessage.call();;\n\t}\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\t//alert('set focus to panel')\n} else { \n\t//alert('refresh the ux');\n\tif(flagSetFocusToDynamicPanel) pNavObj.setActivePanel(go.alias.toUpperCase());\n\tif(flagSetFocusToDynamicPanel) {dialog.object}.panelSetActive('PANELNAVIGATOR_1',true,true);\n\tvar obj = window[go.alias.toUpperCase() + '_DlgObj'];\n\tif(typeof go.specialDialogMode == 'undefined') { \n\t\tgo.specialDialogMode = 'refreshUX';\n\t}\n\tobj.synchronizeDialog(go);\n\n}\n\n\n\n}"
                },
                "xbasicFunctions": {
                    "unbound": ""
                },
                "clientSideXbasicFunctions": {
                    "unbound": ""
                },
                "part": ""
            }
        ],
        "unboundActionShowOnNewActionMessage": true,
        "actionJavascriptUnboundLastEdited": "755603b6-d7fa-47fa-9385-33ba647a4e88",
        "json": "{\n\t\"items\": [\n\t{\n\t\t\"html\": \"Adresses\",\n\t\t\"action\": \"action1\"\n\t},\n\t{\n\t\t\"html\": \"Salon/Hairdressers\",\n\t\t\"action\": \"action2\"\n\t},\n\t{\n\t\t\"html\": \"Gifts\",\n\t\t\"action\": \"action3\"\n\t},\n\t{\n\t\t\"html\": \"Distribute Points\",\n\t\t\"action\": \"action4\"\n\t}],\n\t\"actions\": {\n\t\t\"action1\": function(arg) { {dialog.object}.runAction('OpenAddresses');},\n\t\t\"action2\": function(arg) { {dialog.object}.runAction('OpenSalon');},\n\t\t\"action3\": function(arg) { {dialog.object}.runAction('OpneGifts');},\n\t\t\"action4\": function(arg) { {dialog.object}.runAction('OpenDistPoint');}\n\t}\n}",
        "jsonInputArray": "{\n\t\"tree\": [\n\t{\n\t\t\"label\": \"Adresses\",\n\t\t\"level\": 1,\n\t\t\"isLeaf\": true,\n\t\t\"Icon\": \"\",\n\t\t\"Event\": \"\",\n\t\t\"value\": \"\",\n\t\t\"onClick\": \"{dialog.object}.runAction('OpenAddresses');\",\n\t\t\"SecurityGroups\": \"\",\n\t\t\"serverSideShowHideExpn\": \"\",\n\t\t\"targetPanel\": \"\",\n\t\t\"itemType\": \"Item\",\n\t\t\"headingText\": \"\",\n\t\t\"actionName\": \"\",\n\t\t\"clientsideshowhideexpn\": \"\"\n\t},\n\t{\n\t\t\"label\": \"Salon/Hairdressers\",\n\t\t\"level\": 1,\n\t\t\"isLeaf\": true,\n\t\t\"Icon\": \"\",\n\t\t\"Event\": \"\",\n\t\t\"value\": \"\",\n\t\t\"onClick\": \"{dialog.object}.runAction('OpenSalon');\",\n\t\t\"SecurityGroups\": \"\",\n\t\t\"serverSideShowHideExpn\": \"\",\n\t\t\"targetPanel\": \"\",\n\t\t\"itemType\": \"Item\",\n\t\t\"headingText\": \"\",\n\t\t\"actionName\": \"\",\n\t\t\"clientsideshowhideexpn\": \"\"\n\t},\n\t{\n\t\t\"label\": \"Gifts\",\n\t\t\"level\": 1,\n\t\t\"isLeaf\": true,\n\t\t\"Icon\": \"\",\n\t\t\"Event\": \"\",\n\t\t\"value\": \"\",\n\t\t\"onClick\": \"{dialog.object}.runAction('OpneGifts');\",\n\t\t\"SecurityGroups\": \"\",\n\t\t\"serverSideShowHideExpn\": \"\",\n\t\t\"targetPanel\": \"\",\n\t\t\"itemType\": \"Item\",\n\t\t\"headingText\": \"\",\n\t\t\"actionName\": \"\",\n\t\t\"clientsideshowhideexpn\": \"\"\n\t},\n\t{\n\t\t\"label\": \"Distribute Points\",\n\t\t\"level\": 1,\n\t\t\"isLeaf\": true,\n\t\t\"Icon\": \"\",\n\t\t\"Event\": \"\",\n\t\t\"value\": \"\",\n\t\t\"onClick\": \"{dialog.object}.runAction('OpenDistPoint');\",\n\t\t\"SecurityGroups\": \"\",\n\t\t\"serverSideShowHideExpn\": \"\",\n\t\t\"targetPanel\": \"\",\n\t\t\"itemType\": \"Item\",\n\t\t\"headingText\": \"\",\n\t\t\"actionName\": \"\",\n\t\t\"clientsideshowhideexpn\": \"\"\n\t}]\n}",
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC5WMsQ6CQBAFexP/Aa/Hq+gOOjsqf2Cznq84PPGyuyD8vSQUFlaWM5NM0CipWGVrQesMi/mBZ96tq1Ri677Cc3Me1HXB79wdD+HfAU2Sfyanun/x/bIYZOTcp5uwJGi9NSJByRzBdp1GS08QRVW1NcPe4IcSfQAk7ywxxgAAAA==",
                    "CSS_Link": "*gzip:H4sIAAAAAAAAC81abU/byBa+X6nU/zBLixau6pA4hA1O4SoF2iLRbgXtdqXVqprY42QWx2ONJwQa8d/vmRfbY8dOAu2HFSp4zpw5b3POc2bsvk7FfUSQuE/I8bYgd2LfT9Ptk+fPJmIaoQVy5mR0Q4UjcOJM6HgSwT/h+Cxi3EN8PMK77VfqZ2+Q885Swp2URMQXHopZTGBqmjqCzfyJg31BWWzoD8+f0ZDjKUGL2sXSIMnUGvZ8FgtMY8LRIowYFl5EQjFIcBDQeOy1kzvDd/r1Et+zmUCLbA4dwCTSi5BahUbszknpdzU7YjwAlUCSZrLvTvNk2jxnrG+Y16a94zR4TwNyzjnjpyxChpaPFwFNkwjfezpoxaorNldMFxCFCpclGqcZH1q5jsYRBNIZRcy/GZSU/EHJ/AMLSMFbw3QeUFFmqhgCPBdxzrVK+oYLlzXWmHVGubhfJfo0IngpChXtqZbSKHWzRRVNuSlE7sVnyGm00BXESTAIIbFlzhCvn4gy2/us4CDnJdecyIE3YlHzMprYwkfYvxlzNosD70UYhjjEaMaj3V/pFI9Juv8SknP/pZSy37/r778MaRTtf0l2em/PKB6zGEfe1wkVZKc73HG7bq+345663SP9u5XE4xbuKVG/7g10unud5A6lLKIBehH2+4Mp5mMaQ+0nngtlmNWkfG7w4CJOZqUALQmWRC1XEisrrZgtiXDrRBTQca1QhwRvZkLIemEJ9qm491q9AQRGgAAcJRO8a+jHPQA9vfIivqUpHUXkEtISLayoVzFS8yswklkCaIZ8+VfChZgATOVBQdIwNKeBmJjnid5+PWC3hIOYuYcmNAhIPEA53ql5450eGP81rChTaSQ9y5Zqqy5pKt6B2cl7goE9RYvvDo0Dcuf1BlsJS6lCbk4iLOitymj9I1E3Q+chxD4+JbGQQF1GYJMKEoE9PBMsyw2uvFIUifcOliI85CshjVj9UKP3EkQ3aG1QsrIdPKAaHVc6t9a4ZutQqlf50RzBE2R1tFeo3uF1TNridVy2xrzXrlS5isvSWTTuAhFRqQVlvdmC7DOaYiinoChC1Oo95On2Vi6ASF7iEYmkZrQoEhTlGbploQ9yi0IvLb+IU+jJK4SsXkMl6KgINHHow8xKFpkumBMsLdCJVdiMfqHThHGBY5EnS0lOk2RIUkblpjrkFjY31eVvuYhHAIYzATQryIMtpbnX3hlsqXxGHRm4wZauIDNCguM4DRmfevoRgkV2YeqV0+vs7IEQSTR6cl7Ubben6SsEGrLHHO80oW6D1GDJRwiVhZXKKm25esod6hhTak3ttNs7e5urzML6w4oPk7u9fC8/4ZhEV0TFYIGK1mEO2Vb/aHV6uoNYwDv0fcASCPNnKiLye6ySoUIMwxpqUWF5UepqNL0CWY386Ogo79xItm4FbwEBedg6zfsznsprgUm7DN+hsQk21QuRLeah7IEMBPTOevUGMVWglbIa4Xa1O25e7Z/x6DNLTGjMwIREjxpDYd8ZVtuVmWGbZgrGPvY8Inhl29Gi4q/TKcTmxK7t8xtFLNw248JzTfgR53+uo5nBWQ5Ym10CxZKXsh0VPqpR4aEcPjbPa/LqR5zS9uXbZ0JV2j1Dk24Zxw3F6ocgSbXUwlU9LHxV48c6a/RpnG8qqx9x3xid+681ldzXpG6lXCUYlBPVpsio2mOlZiV+lIBnUJwkpHgcBxusa5eKC9bAH6u6DMEqL00ptqTmbPGoXVqDMaWzztO2bS7vek4KLYxIjjnHSY3LT8EiWHtNEgzaGS9irYywi73ieHbh6drutM3VUT4JhDnFUVmRTI5rn7Mo2iTmpTBt6lh9ODcusroNLbmg8vlf6IMNTGudsJK/ptnWYXQtltW3q5UnGvs4i8zVHZXu7vKAu6et/QpXXDZHC/PuT/uJAzpLdZysd3tLc7YEefWvQ5F2u22/hkEvXNcdFBa6+cuFqoVurzgkVo953kTe/+sPe9ZcCZjKdH0KKtNM+ywTs0ZTEZudJjR5sZRN4Cvh2csy5cMHEs8uBJmiJebSxQ9HbHx1vYQWBUAEoBp2+YXv+wOkrpEGJ3rWVVxfYvItysS+ZUy9mbC5Ou2kuIYPYzq9YgJO6kdtHV6LcHr6tULr9KtcQAG2pqvuimuRsdTW9xfuOf6E+DckOGbx3xC44kbBFc/uUTsg472atWDEBsudhvXgxQargatp9YbqlyVcz3FScQWdoP96EU4FiKNRsJkfNXLkvqwXtV4SGL2JSRv4ZpJlvbB6Wat7wxMSTwkFa4wJht8gUiN3yfaa1wv57Vi3QPmUg1y7Iq+aNFJ8SHkh/1ErbcOsm7l1hX69rz6AnahniNcNHPgiAgBzvL0tY3q8rebTCSFiu/qZDE04CY+34XF/KLHbOcP8xnnHCYm12BZM/W80A/0+gL/41pdf1l6nPqdwdOFkCtBJQxrPGb+B9pxwckvJ3NbyD77Fmn0bpdxfqeufqirwTS09yVx7hD/f0gnmJLhWzCucke40fEFsUfXV6fkzhKBDCOrjKHslOqVBEJGBnDIvuN1DyAo5zs58OUF+k/B0G5XDVHB2QwxBvbiWaq7pdyKb/1p1q6TZ6tVbXMs+Nc7VFUcNyVI08996mmfx5c9PV+dX5x/P4NfZ8PJieP3w7fzPT8OPZxcf3304//ilg1pU9kIrSMa0oD3qj/pl6wztkbKV1BqEUOTsyAhhRh3XxLp8TvFd7GJFr14UJM3uvMVumS/DT7NYnyW03SVTukfdw+7hI6SNAL78SSkOpeume1DjscI8OHaQWDxRVaMDve5BeBA+XuqypIPDg+5B9wn2rQvJQV8en54sdp3439yfIn6dmqPDn6pmnbqO+qqwub4pnIHfzqII7nYA3G/yjT2VZVPd7ey/WWSVKNUU/ep1/pCT/vN/3zSx2s4hAAA=",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVBIzs8tSEwuUVAoKM0pTlWyAwAdf3UiIwAAAA==",
                    "dialog2_html": "*gzip:"
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}